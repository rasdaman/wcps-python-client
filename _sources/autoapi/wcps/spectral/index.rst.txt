wcps.spectral
=============

.. py:module:: wcps.spectral

.. autoapi-nested-parse::

   Python classes for spectral indices generated from a standardized list curated at
   https://awesome-ee-spectral-indices.readthedocs.io. Each class can be instantiated
   with :class:`wcps.model.WCPSExpr` arguments for the respective bands / constants.
   Example for applying the NDVI index on red/nir Sentinel-2 bands:

   .. code:: python

     from wcps.model import Datacube
     from wcps.spectral import NDVI

     red = Datacube("S2_L2A_32631_B04_10m")
     nir = Datacube("S2_L2A_32631_B08_10m")
     ndvi = NDVI(N=nir, R=red)
     query = ndvi.encode("PNG")



Classes
-------

.. autoapisummary::

   wcps.spectral.AFRI1600
   wcps.spectral.AFRI2100
   wcps.spectral.ANDWI
   wcps.spectral.ARI
   wcps.spectral.ARI2
   wcps.spectral.ARVI
   wcps.spectral.ATSAVI
   wcps.spectral.AVI
   wcps.spectral.AWEInsh
   wcps.spectral.AWEIsh
   wcps.spectral.BAI
   wcps.spectral.BAIM
   wcps.spectral.BAIS2
   wcps.spectral.BCC
   wcps.spectral.BI
   wcps.spectral.BITM
   wcps.spectral.BIXS
   wcps.spectral.BLFEI
   wcps.spectral.BNDVI
   wcps.spectral.BRBA
   wcps.spectral.BWDRVI
   wcps.spectral.BaI
   wcps.spectral.CCI
   wcps.spectral.CIG
   wcps.spectral.CIRE
   wcps.spectral.CRI550
   wcps.spectral.CRI700
   wcps.spectral.CSI
   wcps.spectral.CSIT
   wcps.spectral.CVI
   wcps.spectral.DBI
   wcps.spectral.DBSI
   wcps.spectral.DPDD
   wcps.spectral.DSI
   wcps.spectral.DSWI1
   wcps.spectral.DSWI2
   wcps.spectral.DSWI3
   wcps.spectral.DSWI4
   wcps.spectral.DSWI5
   wcps.spectral.DVI
   wcps.spectral.DVIplus
   wcps.spectral.DpRVIHH
   wcps.spectral.DpRVIVV
   wcps.spectral.EBBI
   wcps.spectral.EBI
   wcps.spectral.EMBI
   wcps.spectral.ENDVI
   wcps.spectral.EVI
   wcps.spectral.EVI2
   wcps.spectral.EVIv
   wcps.spectral.ExG
   wcps.spectral.ExGR
   wcps.spectral.ExR
   wcps.spectral.FAI
   wcps.spectral.FCVI
   wcps.spectral.GARI
   wcps.spectral.GBNDVI
   wcps.spectral.GCC
   wcps.spectral.GDVI
   wcps.spectral.GEMI
   wcps.spectral.GLI
   wcps.spectral.GM1
   wcps.spectral.GM2
   wcps.spectral.GNDVI
   wcps.spectral.GOSAVI
   wcps.spectral.GRNDVI
   wcps.spectral.GRVI
   wcps.spectral.GSAVI
   wcps.spectral.GVMI
   wcps.spectral.IAVI
   wcps.spectral.IBI
   wcps.spectral.IKAW
   wcps.spectral.IPVI
   wcps.spectral.IRECI
   wcps.spectral.LSWI
   wcps.spectral.MBI
   wcps.spectral.MBWI
   wcps.spectral.MCARI
   wcps.spectral.MCARI1
   wcps.spectral.MCARI2
   wcps.spectral.MCARI705
   wcps.spectral.MCARIOSAVI
   wcps.spectral.MCARIOSAVI705
   wcps.spectral.MGRVI
   wcps.spectral.MIRBI
   wcps.spectral.MLSWI26
   wcps.spectral.MLSWI27
   wcps.spectral.MNDVI
   wcps.spectral.MNDWI
   wcps.spectral.MNLI
   wcps.spectral.MRBVI
   wcps.spectral.MSAVI
   wcps.spectral.MSI
   wcps.spectral.MSR
   wcps.spectral.MSR705
   wcps.spectral.MTCI
   wcps.spectral.MTVI1
   wcps.spectral.MTVI2
   wcps.spectral.MuWIR
   wcps.spectral.NBAI
   wcps.spectral.NBLI
   wcps.spectral.NBLIOLI
   wcps.spectral.NBR
   wcps.spectral.NBR2
   wcps.spectral.NBRSWIR
   wcps.spectral.NBRT1
   wcps.spectral.NBRT2
   wcps.spectral.NBRT3
   wcps.spectral.NBRplus
   wcps.spectral.NBSIMS
   wcps.spectral.NBUI
   wcps.spectral.ND705
   wcps.spectral.NDBI
   wcps.spectral.NDBaI
   wcps.spectral.NDCI
   wcps.spectral.NDDI
   wcps.spectral.NDGI
   wcps.spectral.NDGlaI
   wcps.spectral.NDII
   wcps.spectral.NDISIb
   wcps.spectral.NDISIg
   wcps.spectral.NDISImndwi
   wcps.spectral.NDISIndwi
   wcps.spectral.NDISIr
   wcps.spectral.NDMI
   wcps.spectral.NDPI
   wcps.spectral.NDPolI
   wcps.spectral.NDPonI
   wcps.spectral.NDREI
   wcps.spectral.NDSI
   wcps.spectral.NDSII
   wcps.spectral.NDSIWV
   wcps.spectral.NDSInw
   wcps.spectral.NDSWIR
   wcps.spectral.NDSaII
   wcps.spectral.NDSoI
   wcps.spectral.NDTI
   wcps.spectral.NDVI
   wcps.spectral.NDVI705
   wcps.spectral.NDVIMNDWI
   wcps.spectral.NDVIT
   wcps.spectral.NDWI
   wcps.spectral.NDWIns
   wcps.spectral.NDYI
   wcps.spectral.NGRDI
   wcps.spectral.NHFD
   wcps.spectral.NIRv
   wcps.spectral.NIRvH2
   wcps.spectral.NIRvP
   wcps.spectral.NLI
   wcps.spectral.NMDI
   wcps.spectral.NRFIg
   wcps.spectral.NRFIr
   wcps.spectral.NSDS
   wcps.spectral.NSDSI1
   wcps.spectral.NSDSI2
   wcps.spectral.NSDSI3
   wcps.spectral.NSTv1
   wcps.spectral.NSTv2
   wcps.spectral.NWI
   wcps.spectral.NormG
   wcps.spectral.NormNIR
   wcps.spectral.NormR
   wcps.spectral.OCVI
   wcps.spectral.OSAVI
   wcps.spectral.OSI
   wcps.spectral.PI
   wcps.spectral.PISI
   wcps.spectral.PSRI
   wcps.spectral.QpRVI
   wcps.spectral.RCC
   wcps.spectral.RDVI
   wcps.spectral.REDSI
   wcps.spectral.RENDVI
   wcps.spectral.RFDI
   wcps.spectral.RGBVI
   wcps.spectral.RGRI
   wcps.spectral.RI
   wcps.spectral.RI4XS
   wcps.spectral.RNDVI
   wcps.spectral.RVI
   wcps.spectral.S2REP
   wcps.spectral.S2WI
   wcps.spectral.S3
   wcps.spectral.SARVI
   wcps.spectral.SAVI
   wcps.spectral.SAVI2
   wcps.spectral.SAVIT
   wcps.spectral.SEVI
   wcps.spectral.SI
   wcps.spectral.SIPI
   wcps.spectral.SLAVI
   wcps.spectral.SR
   wcps.spectral.SR2
   wcps.spectral.SR3
   wcps.spectral.SR555
   wcps.spectral.SR705
   wcps.spectral.SWI
   wcps.spectral.SWM
   wcps.spectral.SeLI
   wcps.spectral.TCARI
   wcps.spectral.TCARIOSAVI
   wcps.spectral.TCARIOSAVI705
   wcps.spectral.TCI
   wcps.spectral.TDVI
   wcps.spectral.TGI
   wcps.spectral.TRRVI
   wcps.spectral.TSAVI
   wcps.spectral.TTVI
   wcps.spectral.TVI
   wcps.spectral.TWI
   wcps.spectral.TriVI
   wcps.spectral.UI
   wcps.spectral.VARI
   wcps.spectral.VARI700
   wcps.spectral.VDDPI
   wcps.spectral.VHVVD
   wcps.spectral.VHVVP
   wcps.spectral.VHVVR
   wcps.spectral.VI6T
   wcps.spectral.VI700
   wcps.spectral.VIBI
   wcps.spectral.VIG
   wcps.spectral.VVVHD
   wcps.spectral.VVVHR
   wcps.spectral.VVVHS
   wcps.spectral.VgNIRBI
   wcps.spectral.VrNIRBI
   wcps.spectral.WDRVI
   wcps.spectral.WDVI
   wcps.spectral.WI1
   wcps.spectral.WI2
   wcps.spectral.WI2015
   wcps.spectral.WRI
   wcps.spectral.bNIRv
   wcps.spectral.kEVI
   wcps.spectral.kIPVI
   wcps.spectral.kNDVI
   wcps.spectral.kRVI
   wcps.spectral.kVARI
   wcps.spectral.mND705
   wcps.spectral.mSR705
   wcps.spectral.sNIRvLSWI
   wcps.spectral.sNIRvNDPI
   wcps.spectral.sNIRvNDVILSWIP
   wcps.spectral.sNIRvNDVILSWIS
   wcps.spectral.sNIRvSWIR


Module Contents
---------------

.. py:class:: AFRI1600(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Aerosol Free Vegetation Index (1600 nm)


   .. py:attribute:: short_name
      :value: 'AFRI1600'



   .. py:attribute:: long_name
      :value: 'Aerosol Free Vegetation Index (1600 nm)'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(N - 0.66 * S1) / (N + 0.66 * S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00190-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: AFRI2100(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Aerosol Free Vegetation Index (2100 nm)


   .. py:attribute:: short_name
      :value: 'AFRI2100'



   .. py:attribute:: long_name
      :value: 'Aerosol Free Vegetation Index (2100 nm)'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '(N - 0.5 * S2) / (N + 0.5 * S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00190-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: ANDWI(B, G, R, N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Augmented Normalized Difference Water Index


   .. py:attribute:: short_name
      :value: 'ANDWI'



   .. py:attribute:: long_name
      :value: 'Augmented Normalized Difference Water Index'



   .. py:attribute:: bands
      :value: ['B', 'G', 'R', 'N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: '(B + G + R - N - S1 - S2)/(B + G + R + N + S1 + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.envsoft.2021.105030'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: ARI(G, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Anthocyanin Reflectance Index


   .. py:attribute:: short_name
      :value: 'ARI'



   .. py:attribute:: long_name
      :value: 'Anthocyanin Reflectance Index'



   .. py:attribute:: bands
      :value: ['G', 'RE1']



   .. py:attribute:: formula
      :value: '(1 / G) - (1 / RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1562/0031-8655(2001)074%3C0038:OPANEO%3E2.0.CO;2'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: RE1


.. py:class:: ARI2(N, G, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Anthocyanin Reflectance Index 2


   .. py:attribute:: short_name
      :value: 'ARI2'



   .. py:attribute:: long_name
      :value: 'Anthocyanin Reflectance Index 2'



   .. py:attribute:: bands
      :value: ['N', 'G', 'RE1']



   .. py:attribute:: formula
      :value: 'N * ((1 / G) - (1 / RE1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1562/0031-8655(2001)074%3C0038:OPANEO%3E2.0.CO;2'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: RE1


.. py:class:: ARVI(N, R, gamma, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Atmospherically Resistant Vegetation Index


   .. py:attribute:: short_name
      :value: 'ARVI'



   .. py:attribute:: long_name
      :value: 'Atmospherically Resistant Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'gamma', 'B']



   .. py:attribute:: formula
      :value: '(N - (R - gamma * (R - B))) / (N + (R - gamma * (R - B)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/36.134076'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: gamma


   .. py:attribute:: B


.. py:class:: ATSAVI(sla, N, R, slb)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Adjusted Transformed Soil-Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'ATSAVI'



   .. py:attribute:: long_name
      :value: 'Adjusted Transformed Soil-Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['sla', 'N', 'R', 'slb']



   .. py:attribute:: formula
      :value: 'sla * (N - sla * R - slb) / (sla * N + R - sla * slb + 0.08 * (1 + sla ** 2.0))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(91)90009-U'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: sla


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: slb


.. py:class:: AVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Advanced Vegetation Index


   .. py:attribute:: short_name
      :value: 'AVI'



   .. py:attribute:: long_name
      :value: 'Advanced Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(N * (1.0 - R) * (N - R)) ** (1/3)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.465.8749&rep=rep1&type=pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: AWEInsh(G, S1, N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Automated Water Extraction Index


   .. py:attribute:: short_name
      :value: 'AWEInsh'



   .. py:attribute:: long_name
      :value: 'Automated Water Extraction Index'



   .. py:attribute:: bands
      :value: ['G', 'S1', 'N', 'S2']



   .. py:attribute:: formula
      :value: '4.0 * (G - S1) - 0.25 * N + 2.75 * S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2013.08.029'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: S1


   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: AWEIsh(B, G, N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Automated Water Extraction Index with Shadows Elimination


   .. py:attribute:: short_name
      :value: 'AWEIsh'



   .. py:attribute:: long_name
      :value: 'Automated Water Extraction Index with Shadows Elimination'



   .. py:attribute:: bands
      :value: ['B', 'G', 'N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: 'B + 2.5 * G - 1.5 * (N + S1) - 0.25 * S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2013.08.029'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: BAI(R, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Burned Area Index


   .. py:attribute:: short_name
      :value: 'BAI'



   .. py:attribute:: long_name
      :value: 'Burned Area Index'



   .. py:attribute:: bands
      :value: ['R', 'N']



   .. py:attribute:: formula
      :value: '1.0 / ((0.1 - R) ** 2.0 + (0.06 - N) ** 2.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://digital.csic.es/bitstream/10261/6426/1/Martin_Isabel_Serie_Geografica.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: N


.. py:class:: BAIM(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Burned Area Index adapted to MODIS


   .. py:attribute:: short_name
      :value: 'BAIM'



   .. py:attribute:: long_name
      :value: 'Burned Area Index adapted to MODIS'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '1.0/((0.05 - N) ** 2.0) + ((0.2 - S2) ** 2.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.foreco.2006.08.248'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: BAIS2(RE2, RE3, N2, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Burned Area Index for Sentinel 2


   .. py:attribute:: short_name
      :value: 'BAIS2'



   .. py:attribute:: long_name
      :value: 'Burned Area Index for Sentinel 2'



   .. py:attribute:: bands
      :value: ['RE2', 'RE3', 'N2', 'R', 'S2']



   .. py:attribute:: formula
      :value: '(1.0 - ((RE2 * RE3 * N2) / R) ** 0.5) * (((S2 - N2)/(S2 + N2) ** 0.5) + 1.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/ecrs-2-05177'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE3


   .. py:attribute:: N2


   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: BCC(B, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Blue Chromatic Coordinate


   .. py:attribute:: short_name
      :value: 'BCC'



   .. py:attribute:: long_name
      :value: 'Blue Chromatic Coordinate'



   .. py:attribute:: bands
      :value: ['B', 'R', 'G']



   .. py:attribute:: formula
      :value: 'B / (R + G + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(87)90088-5'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: BI(S1, R, N, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Bare Soil Index


   .. py:attribute:: short_name
      :value: 'BI'



   .. py:attribute:: long_name
      :value: 'Bare Soil Index'



   .. py:attribute:: bands
      :value: ['S1', 'R', 'N', 'B']



   .. py:attribute:: formula
      :value: '((S1 + R) - (N + B))/((S1 + R) + (N + B))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.465.8749&rep=rep1&type=pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: B


.. py:class:: BITM(B, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Landsat TM-based Brightness Index


   .. py:attribute:: short_name
      :value: 'BITM'



   .. py:attribute:: long_name
      :value: 'Landsat TM-based Brightness Index'



   .. py:attribute:: bands
      :value: ['B', 'G', 'R']



   .. py:attribute:: formula
      :value: '(((B**2.0)+(G**2.0)+(R**2.0))/3.0)**0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(98)00030-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: BIXS(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SPOT HRV XS-based Brightness Index


   .. py:attribute:: short_name
      :value: 'BIXS'



   .. py:attribute:: long_name
      :value: 'SPOT HRV XS-based Brightness Index'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: '(((G**2.0)+(R**2.0))/2.0)**0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(98)00030-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: BLFEI(G, R, S2, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Built-Up Land Features Extraction Index


   .. py:attribute:: short_name
      :value: 'BLFEI'



   .. py:attribute:: long_name
      :value: 'Built-Up Land Features Extraction Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'S2', 'S1']



   .. py:attribute:: formula
      :value: '(((G+R+S2)/3.0)-S1)/(((G+R+S2)/3.0)+S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/10106049.2018.1497094'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: S2


   .. py:attribute:: S1


.. py:class:: BNDVI(N, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Blue Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'BNDVI'



   .. py:attribute:: long_name
      :value: 'Blue Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'B']



   .. py:attribute:: formula
      :value: '(N - B)/(N + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S1672-6308(07)60027-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/MATRIX4284'



   .. py:attribute:: N


   .. py:attribute:: B


.. py:class:: BRBA(R, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Band Ratio for Built-up Area


   .. py:attribute:: short_name
      :value: 'BRBA'



   .. py:attribute:: long_name
      :value: 'Band Ratio for Built-up Area'



   .. py:attribute:: bands
      :value: ['R', 'S1']



   .. py:attribute:: formula
      :value: 'R/S1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.omicsonline.org/scientific-reports/JGRS-SR136.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: S1


.. py:class:: BWDRVI(alpha, N, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Blue Wide Dynamic Range Vegetation Index


   .. py:attribute:: short_name
      :value: 'BWDRVI'



   .. py:attribute:: long_name
      :value: 'Blue Wide Dynamic Range Vegetation Index'



   .. py:attribute:: bands
      :value: ['alpha', 'N', 'B']



   .. py:attribute:: formula
      :value: '(alpha * N - B) / (alpha * N + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2135/cropsci2007.01.0031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: alpha


   .. py:attribute:: N


   .. py:attribute:: B


.. py:class:: BaI(R, S1, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Bareness Index


   .. py:attribute:: short_name
      :value: 'BaI'



   .. py:attribute:: long_name
      :value: 'Bareness Index'



   .. py:attribute:: bands
      :value: ['R', 'S1', 'N']



   .. py:attribute:: formula
      :value: 'R + S1 - N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.2005.1525743'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: S1


   .. py:attribute:: N


.. py:class:: CCI(G1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Chlorophyll Carotenoid Index


   .. py:attribute:: short_name
      :value: 'CCI'



   .. py:attribute:: long_name
      :value: 'Chlorophyll Carotenoid Index'



   .. py:attribute:: bands
      :value: ['G1', 'R']



   .. py:attribute:: formula
      :value: '(G1 - R)/(G1 + R)'



   .. py:attribute:: platforms
      :value: ['MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1073/pnas.1606162113'



   .. py:attribute:: contributor
      :value: 'https://github.com/joanvlasschaert'



   .. py:attribute:: G1


   .. py:attribute:: R


.. py:class:: CIG(N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Chlorophyll Index Green


   .. py:attribute:: short_name
      :value: 'CIG'



   .. py:attribute:: long_name
      :value: 'Chlorophyll Index Green'



   .. py:attribute:: bands
      :value: ['N', 'G']



   .. py:attribute:: formula
      :value: '(N / G) - 1.0'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1078/0176-1617-00887'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: CIRE(N, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Chlorophyll Index Red Edge


   .. py:attribute:: short_name
      :value: 'CIRE'



   .. py:attribute:: long_name
      :value: 'Chlorophyll Index Red Edge'



   .. py:attribute:: bands
      :value: ['N', 'RE1']



   .. py:attribute:: formula
      :value: '(N / RE1) - 1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1078/0176-1617-00887'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: RE1


.. py:class:: CRI550(B, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Carotenoid Reflectance Index using 550 nm


   .. py:attribute:: short_name
      :value: 'CRI550'



   .. py:attribute:: long_name
      :value: 'Carotenoid Reflectance Index using 550 nm'



   .. py:attribute:: bands
      :value: ['B', 'G']



   .. py:attribute:: formula
      :value: '(1.0 / B) - (1.0 / G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1562/0031-8655(2002)0750272ACCIPL2.0.CO2'



   .. py:attribute:: contributor
      :value: 'https://github.com/eomasters-repos'



   .. py:attribute:: B


   .. py:attribute:: G


.. py:class:: CRI700(B, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Carotenoid Reflectance Index using 700 nm


   .. py:attribute:: short_name
      :value: 'CRI700'



   .. py:attribute:: long_name
      :value: 'Carotenoid Reflectance Index using 700 nm'



   .. py:attribute:: bands
      :value: ['B', 'RE1']



   .. py:attribute:: formula
      :value: '(1.0 / B) - (1.0 / RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1562/0031-8655(2002)0750272ACCIPL2.0.CO2'



   .. py:attribute:: contributor
      :value: 'https://github.com/eomasters-repos'



   .. py:attribute:: B


   .. py:attribute:: RE1


.. py:class:: CSI(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Char Soil Index


   .. py:attribute:: short_name
      :value: 'CSI'



   .. py:attribute:: long_name
      :value: 'Char Soil Index'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: 'N/S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2005.04.014'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: CSIT(N, S2, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Char Soil Index Thermal


   .. py:attribute:: short_name
      :value: 'CSIT'



   .. py:attribute:: long_name
      :value: 'Char Soil Index Thermal'



   .. py:attribute:: bands
      :value: ['N', 'S2', 'T']



   .. py:attribute:: formula
      :value: 'N / (S2 * T / 10000.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160600954704'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


   .. py:attribute:: T


.. py:class:: CVI(N, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Chlorophyll Vegetation Index


   .. py:attribute:: short_name
      :value: 'CVI'



   .. py:attribute:: long_name
      :value: 'Chlorophyll Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G']



   .. py:attribute:: formula
      :value: '(N * R) / (G ** 2.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1007/s11119-010-9204-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: DBI(B, T1, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Dry Built-Up Index


   .. py:attribute:: short_name
      :value: 'DBI'



   .. py:attribute:: long_name
      :value: 'Dry Built-Up Index'



   .. py:attribute:: bands
      :value: ['B', 'T1', 'N', 'R']



   .. py:attribute:: formula
      :value: '((B - T1)/(B + T1)) - ((N - R)/(N + R))'



   .. py:attribute:: platforms
      :value: ['Landsat-OLI']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/land7030081'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: T1


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: DBSI(S1, G, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Dry Bareness Index


   .. py:attribute:: short_name
      :value: 'DBSI'



   .. py:attribute:: long_name
      :value: 'Dry Bareness Index'



   .. py:attribute:: bands
      :value: ['S1', 'G', 'N', 'R']



   .. py:attribute:: formula
      :value: '((S1 - G)/(S1 + G)) - ((N - R)/(N + R))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/land7030081'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: DPDD(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Dual-Pol Diagonal Distance


   .. py:attribute:: short_name
      :value: 'DPDD'



   .. py:attribute:: long_name
      :value: 'Dual-Pol Diagonal Distance'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: '(VV + VH)/2.0 ** 0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2018.09.003'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: DSI(S1, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Drought Stress Index


   .. py:attribute:: short_name
      :value: 'DSI'



   .. py:attribute:: long_name
      :value: 'Drought Stress Index'



   .. py:attribute:: bands
      :value: ['S1', 'N']



   .. py:attribute:: formula
      :value: 'S1/N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.asprs.org/wp-content/uploads/pers/1999journal/apr/1999_apr_495-501.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: S1


   .. py:attribute:: N


.. py:class:: DSWI1(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Disease-Water Stress Index 1


   .. py:attribute:: short_name
      :value: 'DSWI1'



   .. py:attribute:: long_name
      :value: 'Disease-Water Stress Index 1'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: 'N/S1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160310001618031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: DSWI2(S1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Disease-Water Stress Index 2


   .. py:attribute:: short_name
      :value: 'DSWI2'



   .. py:attribute:: long_name
      :value: 'Disease-Water Stress Index 2'



   .. py:attribute:: bands
      :value: ['S1', 'G']



   .. py:attribute:: formula
      :value: 'S1/G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160310001618031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: G


.. py:class:: DSWI3(S1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Disease-Water Stress Index 3


   .. py:attribute:: short_name
      :value: 'DSWI3'



   .. py:attribute:: long_name
      :value: 'Disease-Water Stress Index 3'



   .. py:attribute:: bands
      :value: ['S1', 'R']



   .. py:attribute:: formula
      :value: 'S1/R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160310001618031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: R


.. py:class:: DSWI4(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Disease-Water Stress Index 4


   .. py:attribute:: short_name
      :value: 'DSWI4'



   .. py:attribute:: long_name
      :value: 'Disease-Water Stress Index 4'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: 'G/R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160310001618031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: DSWI5(N, G, S1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Disease-Water Stress Index 5


   .. py:attribute:: short_name
      :value: 'DSWI5'



   .. py:attribute:: long_name
      :value: 'Disease-Water Stress Index 5'



   .. py:attribute:: bands
      :value: ['N', 'G', 'S1', 'R']



   .. py:attribute:: formula
      :value: '(N + G)/(S1 + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160310001618031'



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: S1


   .. py:attribute:: R


.. py:class:: DVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'DVI'



   .. py:attribute:: long_name
      :value: 'Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: 'N - R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(94)00114-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: DVIplus(lambdaN, lambdaR, lambdaG, G, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Difference Vegetation Index Plus


   .. py:attribute:: short_name
      :value: 'DVIplus'



   .. py:attribute:: long_name
      :value: 'Difference Vegetation Index Plus'



   .. py:attribute:: bands
      :value: ['lambdaN', 'lambdaR', 'lambdaG', 'G', 'N', 'R']



   .. py:attribute:: formula
      :value: '((lambdaN - lambdaR)/(lambdaN - lambdaG)) * G + (1.0 - ((lambdaN - lambdaR)/(lambdaN -...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2019.03.028'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: lambdaN


   .. py:attribute:: lambdaR


   .. py:attribute:: lambdaG


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: DpRVIHH(HV, HH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Dual-Polarized Radar Vegetation Index HH


   .. py:attribute:: short_name
      :value: 'DpRVIHH'



   .. py:attribute:: long_name
      :value: 'Dual-Polarized Radar Vegetation Index HH'



   .. py:attribute:: bands
      :value: ['HV', 'HH']



   .. py:attribute:: formula
      :value: '(4.0 * HV)/(HH + HV)'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation HH-HV)']



   .. py:attribute:: reference
      :value: 'https://www.tandfonline.com/doi/abs/10.5589/m12-043'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: HV


   .. py:attribute:: HH


.. py:class:: DpRVIVV(VH, VV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Dual-Polarized Radar Vegetation Index VV


   .. py:attribute:: short_name
      :value: 'DpRVIVV'



   .. py:attribute:: long_name
      :value: 'Dual-Polarized Radar Vegetation Index VV'



   .. py:attribute:: bands
      :value: ['VH', 'VV']



   .. py:attribute:: formula
      :value: '(4.0 * VH)/(VV + VH)'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/app9040655'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VH


   .. py:attribute:: VV


.. py:class:: EBBI(S1, N, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Built-Up and Bareness Index


   .. py:attribute:: short_name
      :value: 'EBBI'



   .. py:attribute:: long_name
      :value: 'Enhanced Built-Up and Bareness Index'



   .. py:attribute:: bands
      :value: ['S1', 'N', 'T']



   .. py:attribute:: formula
      :value: '(S1 - N) / (10.0 * ((S1 + T) ** 0.5))'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs4102957'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: N


   .. py:attribute:: T


.. py:class:: EBI(R, G, B, epsilon)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Bloom Index


   .. py:attribute:: short_name
      :value: 'EBI'



   .. py:attribute:: long_name
      :value: 'Enhanced Bloom Index'



   .. py:attribute:: bands
      :value: ['R', 'G', 'B', 'epsilon']



   .. py:attribute:: formula
      :value: '(R + G + B)/((G/B) * (R - B + epsilon))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2019.08.006'



   .. py:attribute:: contributor
      :value: 'https://github.com/geoSanjeeb'



   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: B


   .. py:attribute:: epsilon


.. py:class:: EMBI(S1, S2, N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Modified Bare Soil Index


   .. py:attribute:: short_name
      :value: 'EMBI'



   .. py:attribute:: long_name
      :value: 'Enhanced Modified Bare Soil Index'



   .. py:attribute:: bands
      :value: ['S1', 'S2', 'N', 'G']



   .. py:attribute:: formula
      :value: '((((S1 - S2 - N)/(S1 + S2 + N)) + 0.5) - ((G - S1)/(G + S1)) - 0.5)/((((S1 - S2 - N)/(S1 + S2 +...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2022.102703'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: S2


   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: ENDVI(N, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'ENDVI'



   .. py:attribute:: long_name
      :value: 'Enhanced Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'B']



   .. py:attribute:: formula
      :value: '((N + G) - (2 * B)) / ((N + G) + (2 * B))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1371/journal.pone.0186193'



   .. py:attribute:: contributor
      :value: 'https://github.com/gagev'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: EVI(g, N, R, C1, C2, B, L)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Vegetation Index


   .. py:attribute:: short_name
      :value: 'EVI'



   .. py:attribute:: long_name
      :value: 'Enhanced Vegetation Index'



   .. py:attribute:: bands
      :value: ['g', 'N', 'R', 'C1', 'C2', 'B', 'L']



   .. py:attribute:: formula
      :value: 'g * (N - R) / (N + C1 * R - C2 * B + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(96)00112-5'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: g


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: C1


   .. py:attribute:: C2


   .. py:attribute:: B


   .. py:attribute:: L


.. py:class:: EVI2(g, N, R, L)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Two-Band Enhanced Vegetation Index


   .. py:attribute:: short_name
      :value: 'EVI2'



   .. py:attribute:: long_name
      :value: 'Two-Band Enhanced Vegetation Index'



   .. py:attribute:: bands
      :value: ['g', 'N', 'R', 'L']



   .. py:attribute:: formula
      :value: 'g * (N - R) / (N + 2.4 * R + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2008.06.006'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: g


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: L


.. py:class:: EVIv(N, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Enhanced Vegetation Index of Vegetation


   .. py:attribute:: short_name
      :value: 'EVIv'



   .. py:attribute:: long_name
      :value: 'Enhanced Vegetation Index of Vegetation'



   .. py:attribute:: bands
      :value: ['N', 'R', 'B']



   .. py:attribute:: formula
      :value: '2.5 * ((N - R)/(N + 6 * R - 7.5 * B + 1.0)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: ExG(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Excess Green Index


   .. py:attribute:: short_name
      :value: 'ExG'



   .. py:attribute:: long_name
      :value: 'Excess Green Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: '2 * G - R - B'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.13031/2013.27838'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: ExGR(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   ExG - ExR Vegetation Index


   .. py:attribute:: short_name
      :value: 'ExGR'



   .. py:attribute:: long_name
      :value: 'ExG - ExR Vegetation Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: '(2.0 * G - R - B) - (1.3 * R - G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.compag.2008.03.009'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: ExR(R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Excess Red Index


   .. py:attribute:: short_name
      :value: 'ExR'



   .. py:attribute:: long_name
      :value: 'Excess Red Index'



   .. py:attribute:: bands
      :value: ['R', 'G']



   .. py:attribute:: formula
      :value: '1.3 * R - G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1117/12.336896'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: FAI(N, R, S1, lambdaN, lambdaR, lambdaS1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Floating Algae Index


   .. py:attribute:: short_name
      :value: 'FAI'



   .. py:attribute:: long_name
      :value: 'Floating Algae Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S1', 'lambdaN', 'lambdaR', 'lambdaS1']



   .. py:attribute:: formula
      :value: 'N - (R + (S1 - R)*((lambdaN - lambdaR)/(lambdaS1 - lambdaR)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2009.05.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/emanuelcastanho'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S1


   .. py:attribute:: lambdaN


   .. py:attribute:: lambdaR


   .. py:attribute:: lambdaS1


.. py:class:: FCVI(N, R, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Fluorescence Correction Vegetation Index


   .. py:attribute:: short_name
      :value: 'FCVI'



   .. py:attribute:: long_name
      :value: 'Fluorescence Correction Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G', 'B']



   .. py:attribute:: formula
      :value: 'N - ((R + G + B)/3.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2020.111676'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: GARI(N, G, B, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Atmospherically Resistant Vegetation Index


   .. py:attribute:: short_name
      :value: 'GARI'



   .. py:attribute:: long_name
      :value: 'Green Atmospherically Resistant Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'B', 'R']



   .. py:attribute:: formula
      :value: '(N - (G - (B - R))) / (N - (G + (B - R)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(96)00072-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: B


   .. py:attribute:: R


.. py:class:: GBNDVI(N, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green-Blue Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'GBNDVI'



   .. py:attribute:: long_name
      :value: 'Green-Blue Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'B']



   .. py:attribute:: formula
      :value: '(N - (G + B))/(N + (G + B))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S1672-6308(07)60027-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: GCC(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Chromatic Coordinate


   .. py:attribute:: short_name
      :value: 'GCC'



   .. py:attribute:: long_name
      :value: 'Green Chromatic Coordinate'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: 'G / (R + G + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(87)90088-5'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: GDVI(N, nexp, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Generalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'GDVI'



   .. py:attribute:: long_name
      :value: 'Generalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'nexp', 'R']



   .. py:attribute:: formula
      :value: '((N ** nexp) - (R ** nexp)) / ((N ** nexp) + (R ** nexp))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs6021211'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: nexp


   .. py:attribute:: R


.. py:class:: GEMI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Global Environment Monitoring Index


   .. py:attribute:: short_name
      :value: 'GEMI'



   .. py:attribute:: long_name
      :value: 'Global Environment Monitoring Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '((2.0*((N ** 2.0)-(R ** 2.0)) + 1.5*N + 0.5*R)/(N + R + 0.5))*(1.0 - 0.25*((2.0 * ((N ** 2.0) -...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1007/bf00031911'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: GLI(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Leaf Index


   .. py:attribute:: short_name
      :value: 'GLI'



   .. py:attribute:: long_name
      :value: 'Green Leaf Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: '(2.0 * G - R - B) / (2.0 * G + R + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1080/10106040108542184'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: GM1(RE2, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Gitelson and Merzlyak Index 1


   .. py:attribute:: short_name
      :value: 'GM1'



   .. py:attribute:: long_name
      :value: 'Gitelson and Merzlyak Index 1'



   .. py:attribute:: bands
      :value: ['RE2', 'G']



   .. py:attribute:: formula
      :value: 'RE2/G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(96)80284-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: G


.. py:class:: GM2(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Gitelson and Merzlyak Index 2


   .. py:attribute:: short_name
      :value: 'GM2'



   .. py:attribute:: long_name
      :value: 'Gitelson and Merzlyak Index 2'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: 'RE2/RE1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(96)80284-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: GNDVI(N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'GNDVI'



   .. py:attribute:: long_name
      :value: 'Green Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G']



   .. py:attribute:: formula
      :value: '(N - G)/(N + G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(96)00072-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: GOSAVI(N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Optimized Soil Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'GOSAVI'



   .. py:attribute:: long_name
      :value: 'Green Optimized Soil Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G']



   .. py:attribute:: formula
      :value: '(N - G) / (N + G + 0.16)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: GRNDVI(N, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green-Red Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'GRNDVI'



   .. py:attribute:: long_name
      :value: 'Green-Red Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R']



   .. py:attribute:: formula
      :value: '(N - (G + R))/(N + (G + R))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S1672-6308(07)60027-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: GRVI(N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Ratio Vegetation Index


   .. py:attribute:: short_name
      :value: 'GRVI'



   .. py:attribute:: long_name
      :value: 'Green Ratio Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G']



   .. py:attribute:: formula
      :value: 'N/G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: GSAVI(L, N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Green Soil Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'GSAVI'



   .. py:attribute:: long_name
      :value: 'Green Soil Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['L', 'N', 'G']



   .. py:attribute:: formula
      :value: '(1.0 + L) * (N - G) / (N + G + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: L


   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: GVMI(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Global Vegetation Moisture Index


   .. py:attribute:: short_name
      :value: 'GVMI'



   .. py:attribute:: long_name
      :value: 'Global Vegetation Moisture Index'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '((N + 0.1) - (S2 + 0.02)) / ((N + 0.1) + (S2 + 0.02))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00037-8'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: IAVI(N, R, gamma, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   New Atmospherically Resistant Vegetation Index


   .. py:attribute:: short_name
      :value: 'IAVI'



   .. py:attribute:: long_name
      :value: 'New Atmospherically Resistant Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'gamma', 'B']



   .. py:attribute:: formula
      :value: '(N - (R - gamma * (B - R)))/(N + (R - gamma * (B - R)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://www.jipb.net/EN/abstract/abstract23925.shtml'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: gamma


   .. py:attribute:: B


.. py:class:: IBI(S1, N, R, L, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Index-Based Built-Up Index


   .. py:attribute:: short_name
      :value: 'IBI'



   .. py:attribute:: long_name
      :value: 'Index-Based Built-Up Index'



   .. py:attribute:: bands
      :value: ['S1', 'N', 'R', 'L', 'G']



   .. py:attribute:: formula
      :value: '(((S1-N)/(S1+N))-(((N-R)*(1.0+L)/(N+R+L))+((G-S1)/(G+S1)))/2.0)/(((S1-N)/(S1+N))+(((N-R)*(1.0+L)...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160802039957'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: L


   .. py:attribute:: G


.. py:class:: IKAW(R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kawashima Index


   .. py:attribute:: short_name
      :value: 'IKAW'



   .. py:attribute:: long_name
      :value: 'Kawashima Index'



   .. py:attribute:: bands
      :value: ['R', 'B']



   .. py:attribute:: formula
      :value: '(R - B)/(R + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1006/anbo.1997.0544'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: IPVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Infrared Percentage Vegetation Index


   .. py:attribute:: short_name
      :value: 'IPVI'



   .. py:attribute:: long_name
      :value: 'Infrared Percentage Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: 'N/(N + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(90)90085-Z'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: IRECI(RE3, R, RE1, RE2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Inverted Red-Edge Chlorophyll Index


   .. py:attribute:: short_name
      :value: 'IRECI'



   .. py:attribute:: long_name
      :value: 'Inverted Red-Edge Chlorophyll Index'



   .. py:attribute:: bands
      :value: ['RE3', 'R', 'RE1', 'RE2']



   .. py:attribute:: formula
      :value: '(RE3 - R) / (RE1 / RE2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2013.04.007'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE3


   .. py:attribute:: R


   .. py:attribute:: RE1


   .. py:attribute:: RE2


.. py:class:: LSWI(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Land Surface Water Index


   .. py:attribute:: short_name
      :value: 'LSWI'



   .. py:attribute:: long_name
      :value: 'Land Surface Water Index'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(N - S1)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2003.11.008'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: MBI(S1, S2, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Bare Soil Index


   .. py:attribute:: short_name
      :value: 'MBI'



   .. py:attribute:: long_name
      :value: 'Modified Bare Soil Index'



   .. py:attribute:: bands
      :value: ['S1', 'S2', 'N']



   .. py:attribute:: formula
      :value: '((S1 - S2 - N)/(S1 + S2 + N)) + 0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/land10030231'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: S2


   .. py:attribute:: N


.. py:class:: MBWI(omega, G, R, N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Multi-Band Water Index


   .. py:attribute:: short_name
      :value: 'MBWI'



   .. py:attribute:: long_name
      :value: 'Multi-Band Water Index'



   .. py:attribute:: bands
      :value: ['omega', 'G', 'R', 'N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: '(omega * G) - R - N - S1 - S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2018.01.018'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: omega


   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: MCARI(RE1, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Chlorophyll Absorption in Reflectance Index


   .. py:attribute:: short_name
      :value: 'MCARI'



   .. py:attribute:: long_name
      :value: 'Modified Chlorophyll Absorption in Reflectance Index'



   .. py:attribute:: bands
      :value: ['RE1', 'R', 'G']



   .. py:attribute:: formula
      :value: '((RE1 - R) - 0.2 * (RE1 - G)) * (RE1 / R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1016/S0034-4257(00)00113-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: MCARI1(N, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Chlorophyll Absorption in Reflectance Index 1


   .. py:attribute:: short_name
      :value: 'MCARI1'



   .. py:attribute:: long_name
      :value: 'Modified Chlorophyll Absorption in Reflectance Index 1'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G']



   .. py:attribute:: formula
      :value: '1.2 * (2.5 * (N - R) - 1.3 * (N - G))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2003.12.013'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: MCARI2(N, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Chlorophyll Absorption in Reflectance Index 2


   .. py:attribute:: short_name
      :value: 'MCARI2'



   .. py:attribute:: long_name
      :value: 'Modified Chlorophyll Absorption in Reflectance Index 2'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G']



   .. py:attribute:: formula
      :value: '(1.5 * (2.5 * (N - R) - 1.3 * (N - G))) / ((((2.0 * N + 1) ** 2) - (6.0 * N - 5 * (R ** 0.5)) -...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2003.12.013'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: MCARI705(RE2, RE1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Chlorophyll Absorption in Reflectance Index (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'MCARI705'



   .. py:attribute:: long_name
      :value: 'Modified Chlorophyll Absorption in Reflectance Index (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1', 'G']



   .. py:attribute:: formula
      :value: '((RE2 - RE1) - 0.2 * (RE2 - G)) * (RE2 / RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.agrformet.2008.03.005'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


   .. py:attribute:: G


.. py:class:: MCARIOSAVI(RE1, R, G, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   MCARI/OSAVI Ratio


   .. py:attribute:: short_name
      :value: 'MCARIOSAVI'



   .. py:attribute:: long_name
      :value: 'MCARI/OSAVI Ratio'



   .. py:attribute:: bands
      :value: ['RE1', 'R', 'G', 'N']



   .. py:attribute:: formula
      :value: '(((RE1 - R) - 0.2 * (RE1 - G)) * (RE1 / R)) / (1.16 * (N - R) / (N + R + 0.16))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(00)00113-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: N


.. py:class:: MCARIOSAVI705(RE2, RE1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   MCARI/OSAVI Ratio (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'MCARIOSAVI705'



   .. py:attribute:: long_name
      :value: 'MCARI/OSAVI Ratio (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1', 'G']



   .. py:attribute:: formula
      :value: '(((RE2 - RE1) - 0.2 * (RE2 - G)) * (RE2 / RE1)) / (1.16 * (RE2 - RE1) / (RE2 + RE1 + 0.16))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.agrformet.2008.03.005'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


   .. py:attribute:: G


.. py:class:: MGRVI(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Green Red Vegetation Index


   .. py:attribute:: short_name
      :value: 'MGRVI'



   .. py:attribute:: long_name
      :value: 'Modified Green Red Vegetation Index'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: '(G ** 2.0 - R ** 2.0) / (G ** 2.0 + R ** 2.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2015.02.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: MIRBI(S2, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Mid-Infrared Burn Index


   .. py:attribute:: short_name
      :value: 'MIRBI'



   .. py:attribute:: long_name
      :value: 'Mid-Infrared Burn Index'



   .. py:attribute:: bands
      :value: ['S2', 'S1']



   .. py:attribute:: formula
      :value: '10.0 * S2 - 9.8 * S1 + 2.0'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160110053185'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: S1


.. py:class:: MLSWI26(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Land Surface Water Index (MODIS Bands 2 and 6)


   .. py:attribute:: short_name
      :value: 'MLSWI26'



   .. py:attribute:: long_name
      :value: 'Modified Land Surface Water Index (MODIS Bands 2 and 6)'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(1.0 - N - S1)/(1.0 - N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs71215805'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: MLSWI27(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Land Surface Water Index (MODIS Bands 2 and 7)


   .. py:attribute:: short_name
      :value: 'MLSWI27'



   .. py:attribute:: long_name
      :value: 'Modified Land Surface Water Index (MODIS Bands 2 and 7)'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '(1.0 - N - S2)/(1.0 - N + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs71215805'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: MNDVI(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'MNDVI'



   .. py:attribute:: long_name
      :value: 'Modified Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '(N - S2)/(N + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/014311697216810'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: MNDWI(G, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Normalized Difference Water Index


   .. py:attribute:: short_name
      :value: 'MNDWI'



   .. py:attribute:: long_name
      :value: 'Modified Normalized Difference Water Index'



   .. py:attribute:: bands
      :value: ['G', 'S1']



   .. py:attribute:: formula
      :value: '(G - S1) / (G + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160600589179'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: S1


.. py:class:: MNLI(L, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Non-Linear Vegetation Index


   .. py:attribute:: short_name
      :value: 'MNLI'



   .. py:attribute:: long_name
      :value: 'Modified Non-Linear Vegetation Index'



   .. py:attribute:: bands
      :value: ['L', 'N', 'R']



   .. py:attribute:: formula
      :value: '(1 + L)*((N ** 2) - R)/((N ** 2) + R + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/TGRS.2003.812910'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: L


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: MRBVI(R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Red Blue Vegetation Index


   .. py:attribute:: short_name
      :value: 'MRBVI'



   .. py:attribute:: long_name
      :value: 'Modified Red Blue Vegetation Index'



   .. py:attribute:: bands
      :value: ['R', 'B']



   .. py:attribute:: formula
      :value: '(R ** 2.0 - B ** 2.0)/(R ** 2.0 + B ** 2.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/s20185055'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: MSAVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Soil-Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'MSAVI'



   .. py:attribute:: long_name
      :value: 'Modified Soil-Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '0.5 * (2.0 * N + 1 - (((2 * N + 1) ** 2) - 8 * (N - R)) ** 0.5)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(94)90134-1'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: MSI(S1, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Moisture Stress Index


   .. py:attribute:: short_name
      :value: 'MSI'



   .. py:attribute:: long_name
      :value: 'Moisture Stress Index'



   .. py:attribute:: bands
      :value: ['S1', 'N']



   .. py:attribute:: formula
      :value: 'S1/N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(89)90046-1'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: N


.. py:class:: MSR(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Simple Ratio


   .. py:attribute:: short_name
      :value: 'MSR'



   .. py:attribute:: long_name
      :value: 'Modified Simple Ratio'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(N / R - 1) / ((N / R + 1) ** 0.5)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/07038992.1996.10855178'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: MSR705(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Simple Ratio (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'MSR705'



   .. py:attribute:: long_name
      :value: 'Modified Simple Ratio (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: '(RE2 / RE1 - 1) / ((RE2 / RE1 + 1) ** 0.5)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.agrformet.2008.03.005'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: MTCI(RE2, RE1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   MERIS Terrestrial Chlorophyll Index


   .. py:attribute:: short_name
      :value: 'MTCI'



   .. py:attribute:: long_name
      :value: 'MERIS Terrestrial Chlorophyll Index'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1', 'R']



   .. py:attribute:: formula
      :value: '(RE2 - RE1) / (RE1 - R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/0143116042000274015'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


   .. py:attribute:: R


.. py:class:: MTVI1(N, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Triangular Vegetation Index 1


   .. py:attribute:: short_name
      :value: 'MTVI1'



   .. py:attribute:: long_name
      :value: 'Modified Triangular Vegetation Index 1'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R']



   .. py:attribute:: formula
      :value: '1.2 * (1.2 * (N - G) - 2.5 * (R - G))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2003.12.013'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: MTVI2(N, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Triangular Vegetation Index 2


   .. py:attribute:: short_name
      :value: 'MTVI2'



   .. py:attribute:: long_name
      :value: 'Modified Triangular Vegetation Index 2'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R']



   .. py:attribute:: formula
      :value: '(1.5 * (1.2 * (N - G) - 2.5 * (R - G))) / ((((2.0 * N + 1) ** 2) - (6.0 * N - 5 * (R ** 0.5)) -...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2003.12.013'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: MuWIR(B, G, N, S2, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Revised Multi-Spectral Water Index


   .. py:attribute:: short_name
      :value: 'MuWIR'



   .. py:attribute:: long_name
      :value: 'Revised Multi-Spectral Water Index'



   .. py:attribute:: bands
      :value: ['B', 'G', 'N', 'S2', 'S1']



   .. py:attribute:: formula
      :value: '-4.0 * ((B - G)/(B + G)) + 2.0 * ((G - N)/(G + N)) + 2.0 * ((G - S2)/(G + S2)) - ((G - S1)/(G + S1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs10101643'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S2


   .. py:attribute:: S1


.. py:class:: NBAI(S2, S1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Built-up Area Index


   .. py:attribute:: short_name
      :value: 'NBAI'



   .. py:attribute:: long_name
      :value: 'Normalized Built-up Area Index'



   .. py:attribute:: bands
      :value: ['S2', 'S1', 'G']



   .. py:attribute:: formula
      :value: '(S2 - S1/G)/(S2 + S1/G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.omicsonline.org/scientific-reports/JGRS-SR136.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: S1


   .. py:attribute:: G


.. py:class:: NBLI(R, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Bare Land Index


   .. py:attribute:: short_name
      :value: 'NBLI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Bare Land Index'



   .. py:attribute:: bands
      :value: ['R', 'T']



   .. py:attribute:: formula
      :value: '(R - T)/(R + T)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs9030249'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: T


.. py:class:: NBLIOLI(R, T1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Bare Land Index for Landsat-OLI


   .. py:attribute:: short_name
      :value: 'NBLIOLI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Bare Land Index for Landsat-OLI'



   .. py:attribute:: bands
      :value: ['R', 'T1']



   .. py:attribute:: formula
      :value: '(R - T1)/(R + T1)'



   .. py:attribute:: platforms
      :value: ['Landsat-OLI']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs9030249'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: T1


.. py:class:: NBR(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio


   .. py:attribute:: short_name
      :value: 'NBR'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '(N - S2) / (N + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3133/ofr0211'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: NBR2(S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio 2


   .. py:attribute:: short_name
      :value: 'NBR2'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio 2'



   .. py:attribute:: bands
      :value: ['S1', 'S2']



   .. py:attribute:: formula
      :value: '(S1 - S2) / (S1 + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.usgs.gov/core-science-systems/nli/landsat/landsat-normalized-burn-ratio-2'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NBRSWIR(S2, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio SWIR


   .. py:attribute:: short_name
      :value: 'NBRSWIR'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio SWIR'



   .. py:attribute:: bands
      :value: ['S2', 'S1']



   .. py:attribute:: formula
      :value: '(S2 - S1 - 0.02)/(S2 + S1 + 0.1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/22797254.2020.1738900'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: S1


.. py:class:: NBRT1(N, S2, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio Thermal 1


   .. py:attribute:: short_name
      :value: 'NBRT1'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio Thermal 1'



   .. py:attribute:: bands
      :value: ['N', 'S2', 'T']



   .. py:attribute:: formula
      :value: '(N - (S2 * T / 10000.0)) / (N + (S2 * T / 10000.0))'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160500239008'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


   .. py:attribute:: T


.. py:class:: NBRT2(N, T, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio Thermal 2


   .. py:attribute:: short_name
      :value: 'NBRT2'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio Thermal 2'



   .. py:attribute:: bands
      :value: ['N', 'T', 'S2']



   .. py:attribute:: formula
      :value: '((N / (T / 10000.0)) - S2) / ((N / (T / 10000.0)) + S2)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160500239008'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: T


   .. py:attribute:: S2


.. py:class:: NBRT3(N, T, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio Thermal 3


   .. py:attribute:: short_name
      :value: 'NBRT3'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio Thermal 3'



   .. py:attribute:: bands
      :value: ['N', 'T', 'S2']



   .. py:attribute:: formula
      :value: '((N - (T / 10000.0)) - S2) / ((N - (T / 10000.0)) + S2)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160500239008'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: T


   .. py:attribute:: S2


.. py:class:: NBRplus(S2, N2, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Burn Ratio Plus


   .. py:attribute:: short_name
      :value: 'NBRplus'



   .. py:attribute:: long_name
      :value: 'Normalized Burn Ratio Plus'



   .. py:attribute:: bands
      :value: ['S2', 'N2', 'G', 'B']



   .. py:attribute:: formula
      :value: '(S2 - N2 - G - B)/(S2 + N2 + G + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs14071727'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: N2


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: NBSIMS(G, R, N, B, S2, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Non-Binary Snow Index for Multi-Component Surfaces


   .. py:attribute:: short_name
      :value: 'NBSIMS'



   .. py:attribute:: long_name
      :value: 'Non-Binary Snow Index for Multi-Component Surfaces'



   .. py:attribute:: bands
      :value: ['G', 'R', 'N', 'B', 'S2', 'S1']



   .. py:attribute:: formula
      :value: '0.36 * (G + R + N) - (((B + S2)/G) + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs13142777'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: B


   .. py:attribute:: S2


   .. py:attribute:: S1


.. py:class:: NBUI(S1, N, T, R, L, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   New Built-Up Index


   .. py:attribute:: short_name
      :value: 'NBUI'



   .. py:attribute:: long_name
      :value: 'New Built-Up Index'



   .. py:attribute:: bands
      :value: ['S1', 'N', 'T', 'R', 'L', 'G']



   .. py:attribute:: formula
      :value: '((S1 - N)/(10.0 * (T + S1) ** 0.5)) - (((N - R) * (1.0 + L))/(N - R + L)) - (G - S1)/(G + S1)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://hdl.handle.net/1959.11/29500'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: N


   .. py:attribute:: T


   .. py:attribute:: R


   .. py:attribute:: L


   .. py:attribute:: G


.. py:class:: ND705(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'ND705'



   .. py:attribute:: long_name
      :value: 'Normalized Difference (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: '(RE2 - RE1)/(RE2 + RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00010-X'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: NDBI(S1, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Built-Up Index


   .. py:attribute:: short_name
      :value: 'NDBI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Built-Up Index'



   .. py:attribute:: bands
      :value: ['S1', 'N']



   .. py:attribute:: formula
      :value: '(S1 - N) / (S1 + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1080/01431160304987'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: N


.. py:class:: NDBaI(S1, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Bareness Index


   .. py:attribute:: short_name
      :value: 'NDBaI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Bareness Index'



   .. py:attribute:: bands
      :value: ['S1', 'T']



   .. py:attribute:: formula
      :value: '(S1 - T) / (S1 + T)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.2005.1526319'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: T


.. py:class:: NDCI(RE1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Chlorophyll Index


   .. py:attribute:: short_name
      :value: 'NDCI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Chlorophyll Index'



   .. py:attribute:: bands
      :value: ['RE1', 'R']



   .. py:attribute:: formula
      :value: '(RE1 - R)/(RE1 + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2011.10.016'



   .. py:attribute:: contributor
      :value: 'https://github.com/kalab-oto'



   .. py:attribute:: RE1


   .. py:attribute:: R


.. py:class:: NDDI(N, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Drought Index


   .. py:attribute:: short_name
      :value: 'NDDI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Drought Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G']



   .. py:attribute:: formula
      :value: '(((N - R)/(N + R)) - ((G - N)/(G + N)))/(((N - R)/(N + R)) + ((G - N)/(G + N)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2006GL029127'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: NDGI(lambdaN, lambdaR, lambdaG, G, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Greenness Index


   .. py:attribute:: short_name
      :value: 'NDGI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Greenness Index'



   .. py:attribute:: bands
      :value: ['lambdaN', 'lambdaR', 'lambdaG', 'G', 'N', 'R']



   .. py:attribute:: formula
      :value: '(((lambdaN - lambdaR)/(lambdaN - lambdaG)) * G + (1.0 - ((lambdaN - lambdaR)/(lambdaN -...



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2019.03.028'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: lambdaN


   .. py:attribute:: lambdaR


   .. py:attribute:: lambdaG


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: NDGlaI(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Glacier Index


   .. py:attribute:: short_name
      :value: 'NDGlaI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Glacier Index'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: '(G - R)/(G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160802385459'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: NDII(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Infrared Index


   .. py:attribute:: short_name
      :value: 'NDII'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Infrared Index'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(N - S1)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.asprs.org/wp-content/uploads/pers/1983journal/jan/1983_jan_77-83.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDISIb(T, B, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Impervious Surface Index Blue


   .. py:attribute:: short_name
      :value: 'NDISIb'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Impervious Surface Index Blue'



   .. py:attribute:: bands
      :value: ['T', 'B', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(T - (B + N + S1) / 3.0)/(T + (B + N + S1) / 3.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.14358/PERS.76.5.557'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: T


   .. py:attribute:: B


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDISIg(T, G, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Impervious Surface Index Green


   .. py:attribute:: short_name
      :value: 'NDISIg'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Impervious Surface Index Green'



   .. py:attribute:: bands
      :value: ['T', 'G', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(T - (G + N + S1) / 3.0)/(T + (G + N + S1) / 3.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.14358/PERS.76.5.557'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: T


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDISImndwi(T, G, S1, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Impervious Surface Index with MNDWI


   .. py:attribute:: short_name
      :value: 'NDISImndwi'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Impervious Surface Index with MNDWI'



   .. py:attribute:: bands
      :value: ['T', 'G', 'S1', 'N']



   .. py:attribute:: formula
      :value: '(T - (((G - S1)/(G + S1)) + N + S1) / 3.0)/(T + (((G - S1)/(G + S1)) + N + S1) / 3.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.14358/PERS.76.5.557'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: T


   .. py:attribute:: G


   .. py:attribute:: S1


   .. py:attribute:: N


.. py:class:: NDISIndwi(T, G, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Impervious Surface Index with NDWI


   .. py:attribute:: short_name
      :value: 'NDISIndwi'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Impervious Surface Index with NDWI'



   .. py:attribute:: bands
      :value: ['T', 'G', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(T - (((G - N)/(G + N)) + N + S1) / 3.0)/(T + (((G - N)/(G + N)) + N + S1) / 3.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.14358/PERS.76.5.557'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: T


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDISIr(T, R, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Impervious Surface Index Red


   .. py:attribute:: short_name
      :value: 'NDISIr'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Impervious Surface Index Red'



   .. py:attribute:: bands
      :value: ['T', 'R', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(T - (R + N + S1) / 3.0)/(T + (R + N + S1) / 3.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.14358/PERS.76.5.557'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: T


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDMI(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Moisture Index


   .. py:attribute:: short_name
      :value: 'NDMI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Moisture Index'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(N - S1)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00318-2'



   .. py:attribute:: contributor
      :value: 'https://github.com/bpurinton'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDPI(N, alpha, R, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Phenology Index


   .. py:attribute:: short_name
      :value: 'NDPI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Phenology Index'



   .. py:attribute:: bands
      :value: ['N', 'alpha', 'R', 'S1']



   .. py:attribute:: formula
      :value: '(N - (alpha * R + (1.0 - alpha) * S1))/(N + (alpha * R + (1.0 - alpha) * S1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2017.04.031'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: alpha


   .. py:attribute:: R


   .. py:attribute:: S1


.. py:class:: NDPolI(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Polarization Index


   .. py:attribute:: short_name
      :value: 'NDPolI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Polarization Index'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: '(VV - VH)/(VV + VH)'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://www.isprs.org/proceedings/XXXVII/congress/4_pdf/267.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: NDPonI(S1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Pond Index


   .. py:attribute:: short_name
      :value: 'NDPonI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Pond Index'



   .. py:attribute:: bands
      :value: ['S1', 'G']



   .. py:attribute:: formula
      :value: '(S1-G)/(S1+G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2006.07.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/CvenGeo'



   .. py:attribute:: S1


   .. py:attribute:: G


.. py:class:: NDREI(N, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Red Edge Index


   .. py:attribute:: short_name
      :value: 'NDREI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Red Edge Index'



   .. py:attribute:: bands
      :value: ['N', 'RE1']



   .. py:attribute:: formula
      :value: '(N - RE1) / (N + RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/1011-1344(93)06963-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: RE1


.. py:class:: NDSI(G, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Snow Index


   .. py:attribute:: short_name
      :value: 'NDSI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Snow Index'



   .. py:attribute:: bands
      :value: ['G', 'S1']



   .. py:attribute:: formula
      :value: '(G - S1) / (G + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.1994.399618'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: S1


.. py:class:: NDSII(G, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Snow Ice Index


   .. py:attribute:: short_name
      :value: 'NDSII'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Snow Ice Index'



   .. py:attribute:: bands
      :value: ['G', 'N']



   .. py:attribute:: formula
      :value: '(G - N)/(G + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160802385459'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: N


.. py:class:: NDSIWV(G, Y)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   WorldView Normalized Difference Soil Index


   .. py:attribute:: short_name
      :value: 'NDSIWV'



   .. py:attribute:: long_name
      :value: 'WorldView Normalized Difference Soil Index'



   .. py:attribute:: bands
      :value: ['G', 'Y']



   .. py:attribute:: formula
      :value: '(G - Y)/(G + Y)'



   .. py:attribute:: platforms
      :value: []



   .. py:attribute:: reference
      :value: 'https://www.semanticscholar.org/paper/Using-WorldView-2-Vis-NIR-MSI-Imagery-to-Support-Wolf/5e50...



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: G


   .. py:attribute:: Y


.. py:class:: NDSInw(N, S1, beta)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Snow Index with no Water


   .. py:attribute:: short_name
      :value: 'NDSInw'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Snow Index with no Water'



   .. py:attribute:: bands
      :value: ['N', 'S1', 'beta']



   .. py:attribute:: formula
      :value: '(N - S1 - beta)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/w12051339'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: beta


.. py:class:: NDSWIR(N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference SWIR


   .. py:attribute:: short_name
      :value: 'NDSWIR'



   .. py:attribute:: long_name
      :value: 'Normalized Difference SWIR'



   .. py:attribute:: bands
      :value: ['N', 'S1']



   .. py:attribute:: formula
      :value: '(N - S1)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/TGRS.2003.819190'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: NDSaII(R, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Snow and Ice Index


   .. py:attribute:: short_name
      :value: 'NDSaII'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Snow and Ice Index'



   .. py:attribute:: bands
      :value: ['R', 'S1']



   .. py:attribute:: formula
      :value: '(R - S1) / (R + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160119766'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: S1


.. py:class:: NDSoI(S2, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Soil Index


   .. py:attribute:: short_name
      :value: 'NDSoI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Soil Index'



   .. py:attribute:: bands
      :value: ['S2', 'G']



   .. py:attribute:: formula
      :value: '(S2 - G)/(S2 + G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2015.02.010'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: G


.. py:class:: NDTI(R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Turbidity Index


   .. py:attribute:: short_name
      :value: 'NDTI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Turbidity Index'



   .. py:attribute:: bands
      :value: ['R', 'G']



   .. py:attribute:: formula
      :value: '(R-G)/(R+G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2006.07.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/CvenGeo'



   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: NDVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'NDVI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(N - R)/(N + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://ntrs.nasa.gov/citations/19740022614'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: NDVI705(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Vegetation Index (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'NDVI705'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Vegetation Index (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: '(RE2 - RE1) / (RE2 + RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(11)81633-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: NDVIMNDWI(N, R, G, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   NDVI-MNDWI Model


   .. py:attribute:: short_name
      :value: 'NDVIMNDWI'



   .. py:attribute:: long_name
      :value: 'NDVI-MNDWI Model'



   .. py:attribute:: bands
      :value: ['N', 'R', 'G', 'S1']



   .. py:attribute:: formula
      :value: '((N - R)/(N + R)) - ((G - S1)/(G + S1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1007/978-3-662-45737-5_51'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: S1


.. py:class:: NDVIT(N, R, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Vegetation Index Thermal


   .. py:attribute:: short_name
      :value: 'NDVIT'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Vegetation Index Thermal'



   .. py:attribute:: bands
      :value: ['N', 'R', 'T']



   .. py:attribute:: formula
      :value: '(N - (R * T / 10000.0))/(N + (R * T / 10000.0))'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160600954704'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: T


.. py:class:: NDWI(G, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Water Index


   .. py:attribute:: short_name
      :value: 'NDWI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Water Index'



   .. py:attribute:: bands
      :value: ['G', 'N']



   .. py:attribute:: formula
      :value: '(G - N) / (G + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431169608948714'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: N


.. py:class:: NDWIns(G, alpha, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Water Index with no Snow Cover and Glaciers


   .. py:attribute:: short_name
      :value: 'NDWIns'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Water Index with no Snow Cover and Glaciers'



   .. py:attribute:: bands
      :value: ['G', 'alpha', 'N']



   .. py:attribute:: formula
      :value: '(G - alpha * N)/(G + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/w12051339'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: alpha


   .. py:attribute:: N


.. py:class:: NDYI(G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Difference Yellowness Index


   .. py:attribute:: short_name
      :value: 'NDYI'



   .. py:attribute:: long_name
      :value: 'Normalized Difference Yellowness Index'



   .. py:attribute:: bands
      :value: ['G', 'B']



   .. py:attribute:: formula
      :value: '(G - B) / (G + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2016.06.016'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: NGRDI(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Green Red Difference Index


   .. py:attribute:: short_name
      :value: 'NGRDI'



   .. py:attribute:: long_name
      :value: 'Normalized Green Red Difference Index'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: '(G - R) / (G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(79)90013-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: NHFD(RE1, A)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Non-Homogeneous Feature Difference


   .. py:attribute:: short_name
      :value: 'NHFD'



   .. py:attribute:: long_name
      :value: 'Non-Homogeneous Feature Difference'



   .. py:attribute:: bands
      :value: ['RE1', 'A']



   .. py:attribute:: formula
      :value: '(RE1 - A) / (RE1 + A)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://www.semanticscholar.org/paper/Using-WorldView-2-Vis-NIR-MSI-Imagery-to-Support-Wolf/5e50...



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: A


.. py:class:: NIRv(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Near-Infrared Reflectance of Vegetation


   .. py:attribute:: short_name
      :value: 'NIRv'



   .. py:attribute:: long_name
      :value: 'Near-Infrared Reflectance of Vegetation'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '((N - R) / (N + R)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.1602244'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: NIRvH2(N, R, k, lambdaN, lambdaR)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Hyperspectral Near-Infrared Reflectance of Vegetation


   .. py:attribute:: short_name
      :value: 'NIRvH2'



   .. py:attribute:: long_name
      :value: 'Hyperspectral Near-Infrared Reflectance of Vegetation'



   .. py:attribute:: bands
      :value: ['N', 'R', 'k', 'lambdaN', 'lambdaR']



   .. py:attribute:: formula
      :value: 'N - R - k * (lambdaN - lambdaR)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2021.112723'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: k


   .. py:attribute:: lambdaN


   .. py:attribute:: lambdaR


.. py:class:: NIRvP(N, R, PAR)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Near-Infrared Reflectance of Vegetation and Incoming PAR


   .. py:attribute:: short_name
      :value: 'NIRvP'



   .. py:attribute:: long_name
      :value: 'Near-Infrared Reflectance of Vegetation and Incoming PAR'



   .. py:attribute:: bands
      :value: ['N', 'R', 'PAR']



   .. py:attribute:: formula
      :value: '((N - R) / (N + R)) * N * PAR'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2021.112763'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: PAR


.. py:class:: NLI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Non-Linear Vegetation Index


   .. py:attribute:: short_name
      :value: 'NLI'



   .. py:attribute:: long_name
      :value: 'Non-Linear Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '((N ** 2) - R)/((N ** 2) + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/02757259409532252'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: NMDI(N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Multi-band Drought Index


   .. py:attribute:: short_name
      :value: 'NMDI'



   .. py:attribute:: long_name
      :value: 'Normalized Multi-band Drought Index'



   .. py:attribute:: bands
      :value: ['N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: '(N - (S1 - S2))/(N + (S1 - S2))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2007GL031021'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NRFIg(G, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Rapeseed Flowering Index Green


   .. py:attribute:: short_name
      :value: 'NRFIg'



   .. py:attribute:: long_name
      :value: 'Normalized Rapeseed Flowering Index Green'



   .. py:attribute:: bands
      :value: ['G', 'S2']



   .. py:attribute:: formula
      :value: '(G - S2) / (G + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs13010105'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: S2


.. py:class:: NRFIr(R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Rapeseed Flowering Index Red


   .. py:attribute:: short_name
      :value: 'NRFIr'



   .. py:attribute:: long_name
      :value: 'Normalized Rapeseed Flowering Index Red'



   .. py:attribute:: bands
      :value: ['R', 'S2']



   .. py:attribute:: formula
      :value: '(R - S2) / (R + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs13010105'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: NSDS(S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Shortwave Infrared Difference Soil-Moisture


   .. py:attribute:: short_name
      :value: 'NSDS'



   .. py:attribute:: long_name
      :value: 'Normalized Shortwave Infrared Difference Soil-Moisture'



   .. py:attribute:: bands
      :value: ['S1', 'S2']



   .. py:attribute:: formula
      :value: '(S1 - S2)/(S1 + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/land10030231'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NSDSI1(S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 1


   .. py:attribute:: short_name
      :value: 'NSDSI1'



   .. py:attribute:: long_name
      :value: 'Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 1'



   .. py:attribute:: bands
      :value: ['S1', 'S2']



   .. py:attribute:: formula
      :value: '(S1-S2)/S1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2019.06.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/CvenGeo'



   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NSDSI2(S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 2


   .. py:attribute:: short_name
      :value: 'NSDSI2'



   .. py:attribute:: long_name
      :value: 'Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 2'



   .. py:attribute:: bands
      :value: ['S1', 'S2']



   .. py:attribute:: formula
      :value: '(S1-S2)/S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2019.06.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/CvenGeo'



   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NSDSI3(S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 3


   .. py:attribute:: short_name
      :value: 'NSDSI3'



   .. py:attribute:: long_name
      :value: 'Normalized Shortwave-Infrared Difference Bare Soil Moisture Index 3'



   .. py:attribute:: bands
      :value: ['S1', 'S2']



   .. py:attribute:: formula
      :value: '(S1-S2)/(S1+S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2019.06.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/CvenGeo'



   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NSTv1(N, S2, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   NIR-SWIR-Temperature Version 1


   .. py:attribute:: short_name
      :value: 'NSTv1'



   .. py:attribute:: long_name
      :value: 'NIR-SWIR-Temperature Version 1'



   .. py:attribute:: bands
      :value: ['N', 'S2', 'T']



   .. py:attribute:: formula
      :value: '((N-S2)/(N+S2))*T'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2011.06.010'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


   .. py:attribute:: T


.. py:class:: NSTv2(N, S2, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   NIR-SWIR-Temperature Version 2


   .. py:attribute:: short_name
      :value: 'NSTv2'



   .. py:attribute:: long_name
      :value: 'NIR-SWIR-Temperature Version 2'



   .. py:attribute:: bands
      :value: ['N', 'S2', 'T']



   .. py:attribute:: formula
      :value: '(N-(S2+T))/(N+(S2+T))'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2011.06.010'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


   .. py:attribute:: T


.. py:class:: NWI(B, N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   New Water Index


   .. py:attribute:: short_name
      :value: 'NWI'



   .. py:attribute:: long_name
      :value: 'New Water Index'



   .. py:attribute:: bands
      :value: ['B', 'N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: '(B - (N + S1 + S2))/(B + (N + S1 + S2))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.11873/j.issn.1004-0323.2009.2.167'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: NormG(G, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Green


   .. py:attribute:: short_name
      :value: 'NormG'



   .. py:attribute:: long_name
      :value: 'Normalized Green'



   .. py:attribute:: bands
      :value: ['G', 'N', 'R']



   .. py:attribute:: formula
      :value: 'G/(N + G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: NormNIR(N, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized NIR


   .. py:attribute:: short_name
      :value: 'NormNIR'



   .. py:attribute:: long_name
      :value: 'Normalized NIR'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R']



   .. py:attribute:: formula
      :value: 'N/(N + G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: NormR(R, N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Normalized Red


   .. py:attribute:: short_name
      :value: 'NormR'



   .. py:attribute:: long_name
      :value: 'Normalized Red'



   .. py:attribute:: bands
      :value: ['R', 'N', 'G']



   .. py:attribute:: formula
      :value: 'R/(N + G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj2004.0314'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: OCVI(N, G, R, cexp)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Optimized Chlorophyll Vegetation Index


   .. py:attribute:: short_name
      :value: 'OCVI'



   .. py:attribute:: long_name
      :value: 'Optimized Chlorophyll Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R', 'cexp']



   .. py:attribute:: formula
      :value: '(N / G) * (R / G) ** cexp'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1007/s11119-008-9075-z'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: cexp


.. py:class:: OSAVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Optimized Soil-Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'OSAVI'



   .. py:attribute:: long_name
      :value: 'Optimized Soil-Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(N - R) / (N + R + 0.16)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(95)00186-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: OSI(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Oil Spill Index


   .. py:attribute:: short_name
      :value: 'OSI'



   .. py:attribute:: long_name
      :value: 'Oil Spill Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: '(G + R)/B'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.mex.2021.101327'



   .. py:attribute:: contributor
      :value: 'https://github.com/emanuelcastanho'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: PI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Plastic Index


   .. py:attribute:: short_name
      :value: 'PI'



   .. py:attribute:: long_name
      :value: 'Plastic Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: 'N/(N + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs12162648'



   .. py:attribute:: contributor
      :value: 'https://github.com/emanuelcastanho'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: PISI(B, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Perpendicular Impervious Surface Index


   .. py:attribute:: short_name
      :value: 'PISI'



   .. py:attribute:: long_name
      :value: 'Perpendicular Impervious Surface Index'



   .. py:attribute:: bands
      :value: ['B', 'N']



   .. py:attribute:: formula
      :value: '0.8192 * B - 0.5735 * N + 0.0750'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs10101521'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: N


.. py:class:: PSRI(R, B, RE2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Plant Senescing Reflectance Index


   .. py:attribute:: short_name
      :value: 'PSRI'



   .. py:attribute:: long_name
      :value: 'Plant Senescing Reflectance Index'



   .. py:attribute:: bands
      :value: ['R', 'B', 'RE2']



   .. py:attribute:: formula
      :value: '(R - B)/RE2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1034/j.1399-3054.1999.106119.x'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: B


   .. py:attribute:: RE2


.. py:class:: QpRVI(HV, HH, VV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Quad-Polarized Radar Vegetation Index


   .. py:attribute:: short_name
      :value: 'QpRVI'



   .. py:attribute:: long_name
      :value: 'Quad-Polarized Radar Vegetation Index'



   .. py:attribute:: bands
      :value: ['HV', 'HH', 'VV']



   .. py:attribute:: formula
      :value: '(8.0 * HV)/(HH + VV + 2.0 * HV)'



   .. py:attribute:: platforms
      :value: []



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.2001.976856'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: HV


   .. py:attribute:: HH


   .. py:attribute:: VV


.. py:class:: RCC(R, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Red Chromatic Coordinate


   .. py:attribute:: short_name
      :value: 'RCC'



   .. py:attribute:: long_name
      :value: 'Red Chromatic Coordinate'



   .. py:attribute:: bands
      :value: ['R', 'G', 'B']



   .. py:attribute:: formula
      :value: 'R / (R + G + B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(87)90088-5'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: RDVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Renormalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'RDVI'



   .. py:attribute:: long_name
      :value: 'Renormalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(N - R) / ((N + R) ** 0.5)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(94)00114-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: REDSI(RE3, R, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Red-Edge Disease Stress Index


   .. py:attribute:: short_name
      :value: 'REDSI'



   .. py:attribute:: long_name
      :value: 'Red-Edge Disease Stress Index'



   .. py:attribute:: bands
      :value: ['RE3', 'R', 'RE1']



   .. py:attribute:: formula
      :value: '((705.0 - 665.0) * (RE3 - R) - (783.0 - 665.0) * (RE1 - R)) / (2.0 * R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/s18030868'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE3


   .. py:attribute:: R


   .. py:attribute:: RE1


.. py:class:: RENDVI(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Red Edge Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'RENDVI'



   .. py:attribute:: long_name
      :value: 'Red Edge Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: '(RE2 - RE1)/(RE2 + RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(11)81633-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: RFDI(HH, HV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Radar Forest Degradation Index


   .. py:attribute:: short_name
      :value: 'RFDI'



   .. py:attribute:: long_name
      :value: 'Radar Forest Degradation Index'



   .. py:attribute:: bands
      :value: ['HH', 'HV']



   .. py:attribute:: formula
      :value: '(HH - HV)/(HH + HV)'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation HH-HV)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.5194/bg-9-179-2012'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: HH


   .. py:attribute:: HV


.. py:class:: RGBVI(G, B, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Red Green Blue Vegetation Index


   .. py:attribute:: short_name
      :value: 'RGBVI'



   .. py:attribute:: long_name
      :value: 'Red Green Blue Vegetation Index'



   .. py:attribute:: bands
      :value: ['G', 'B', 'R']



   .. py:attribute:: formula
      :value: '(G ** 2.0 - B * R)/(G ** 2.0 + B * R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2015.02.012'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: B


   .. py:attribute:: R


.. py:class:: RGRI(R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Red-Green Ratio Index


   .. py:attribute:: short_name
      :value: 'RGRI'



   .. py:attribute:: long_name
      :value: 'Red-Green Ratio Index'



   .. py:attribute:: bands
      :value: ['R', 'G']



   .. py:attribute:: formula
      :value: 'R/G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.jag.2014.03.018'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: RI(R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Redness Index


   .. py:attribute:: short_name
      :value: 'RI'



   .. py:attribute:: long_name
      :value: 'Redness Index'



   .. py:attribute:: bands
      :value: ['R', 'G']



   .. py:attribute:: formula
      :value: '(R - G)/(R + G)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://www.documentation.ird.fr/hor/fdi:34390'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: RI4XS(R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SPOT HRV XS-based Redness Index 4


   .. py:attribute:: short_name
      :value: 'RI4XS'



   .. py:attribute:: long_name
      :value: 'SPOT HRV XS-based Redness Index 4'



   .. py:attribute:: bands
      :value: ['R', 'G']



   .. py:attribute:: formula
      :value: '(R**2.0)/(G**4.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(98)00030-3'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: RNDVI(R, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Reversed Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'RNDVI'



   .. py:attribute:: long_name
      :value: 'Reversed Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['R', 'N']



   .. py:attribute:: formula
      :value: '(R - N)/(R + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs12162648'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: N


.. py:class:: RVI(RE2, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Ratio Vegetation Index


   .. py:attribute:: short_name
      :value: 'RVI'



   .. py:attribute:: long_name
      :value: 'Ratio Vegetation Index'



   .. py:attribute:: bands
      :value: ['RE2', 'R']



   .. py:attribute:: formula
      :value: 'RE2 / R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2134/agronj1968.00021962006000060016x'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: R


.. py:class:: S2REP(RE3, R, RE1, RE2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Sentinel-2 Red-Edge Position


   .. py:attribute:: short_name
      :value: 'S2REP'



   .. py:attribute:: long_name
      :value: 'Sentinel-2 Red-Edge Position'



   .. py:attribute:: bands
      :value: ['RE3', 'R', 'RE1', 'RE2']



   .. py:attribute:: formula
      :value: '705.0 + 35.0 * ((((RE3 + R) / 2.0) - RE1) / (RE2 - RE1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.isprsjprs.2013.04.007'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE3


   .. py:attribute:: R


   .. py:attribute:: RE1


   .. py:attribute:: RE2


.. py:class:: S2WI(RE1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Sentinel-2 Water Index


   .. py:attribute:: short_name
      :value: 'S2WI'



   .. py:attribute:: long_name
      :value: 'Sentinel-2 Water Index'



   .. py:attribute:: bands
      :value: ['RE1', 'S2']



   .. py:attribute:: formula
      :value: '(RE1 - S2)/(RE1 + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/w13121647'



   .. py:attribute:: contributor
      :value: 'https://github.com/MATRIX4284'



   .. py:attribute:: RE1


   .. py:attribute:: S2


.. py:class:: S3(N, R, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   S3 Snow Index


   .. py:attribute:: short_name
      :value: 'S3'



   .. py:attribute:: long_name
      :value: 'S3 Snow Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S1']



   .. py:attribute:: formula
      :value: '(N * (R - S1)) / ((N + R) * (N + S1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3178/jjshwr.12.28'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S1


.. py:class:: SARVI(L, N, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Soil Adjusted and Atmospherically Resistant Vegetation Index


   .. py:attribute:: short_name
      :value: 'SARVI'



   .. py:attribute:: long_name
      :value: 'Soil Adjusted and Atmospherically Resistant Vegetation Index'



   .. py:attribute:: bands
      :value: ['L', 'N', 'R', 'B']



   .. py:attribute:: formula
      :value: '(1 + L)*(N - (R - (R - B))) / (N + (R - (R - B)) + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/36.134076'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: L


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: SAVI(L, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Soil-Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'SAVI'



   .. py:attribute:: long_name
      :value: 'Soil-Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['L', 'N', 'R']



   .. py:attribute:: formula
      :value: '(1.0 + L) * (N - R) / (N + R + L)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(88)90106-X'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: L


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: SAVI2(N, R, slb, sla)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Soil-Adjusted Vegetation Index 2


   .. py:attribute:: short_name
      :value: 'SAVI2'



   .. py:attribute:: long_name
      :value: 'Soil-Adjusted Vegetation Index 2'



   .. py:attribute:: bands
      :value: ['N', 'R', 'slb', 'sla']



   .. py:attribute:: formula
      :value: 'N / (R + (slb / sla))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431169008955053'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: slb


   .. py:attribute:: sla


.. py:class:: SAVIT(L, N, R, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Soil-Adjusted Vegetation Index Thermal


   .. py:attribute:: short_name
      :value: 'SAVIT'



   .. py:attribute:: long_name
      :value: 'Soil-Adjusted Vegetation Index Thermal'



   .. py:attribute:: bands
      :value: ['L', 'N', 'R', 'T']



   .. py:attribute:: formula
      :value: '(1.0 + L) * (N - (R * T / 10000.0)) / (N + (R * T / 10000.0) + L)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160600954704'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: L


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: T


.. py:class:: SEVI(N, R, fdelta)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Shadow-Eliminated Vegetation Index


   .. py:attribute:: short_name
      :value: 'SEVI'



   .. py:attribute:: long_name
      :value: 'Shadow-Eliminated Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'fdelta']



   .. py:attribute:: formula
      :value: '(N/R) + fdelta * (1.0/R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/17538947.2018.1495770'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: fdelta


.. py:class:: SI(B, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Shadow Index


   .. py:attribute:: short_name
      :value: 'SI'



   .. py:attribute:: long_name
      :value: 'Shadow Index'



   .. py:attribute:: bands
      :value: ['B', 'G', 'R']



   .. py:attribute:: formula
      :value: '((1.0 - B) * (1.0 - G) * (1.0 - R)) ** (1/3)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.465.8749&rep=rep1&type=pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: SIPI(N, A, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Structure Insensitive Pigment Index


   .. py:attribute:: short_name
      :value: 'SIPI'



   .. py:attribute:: long_name
      :value: 'Structure Insensitive Pigment Index'



   .. py:attribute:: bands
      :value: ['N', 'A', 'R']



   .. py:attribute:: formula
      :value: '(N - A) / (N - R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI']



   .. py:attribute:: reference
      :value: 'https://eurekamag.com/research/009/395/009395053.php'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: A


   .. py:attribute:: R


.. py:class:: SLAVI(N, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Specific Leaf Area Vegetation Index


   .. py:attribute:: short_name
      :value: 'SLAVI'



   .. py:attribute:: long_name
      :value: 'Specific Leaf Area Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S2']



   .. py:attribute:: formula
      :value: 'N/(R + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.asprs.org/wp-content/uploads/pers/2000journal/february/2000_feb_183-191.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/geoSanjeeb'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: SR(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Simple Ratio


   .. py:attribute:: short_name
      :value: 'SR'



   .. py:attribute:: long_name
      :value: 'Simple Ratio'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: 'N/R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.2307/1936256'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: SR2(N, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Simple Ratio (800 and 550 nm)


   .. py:attribute:: short_name
      :value: 'SR2'



   .. py:attribute:: long_name
      :value: 'Simple Ratio (800 and 550 nm)'



   .. py:attribute:: bands
      :value: ['N', 'G']



   .. py:attribute:: formula
      :value: 'N/G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431169308904370'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


.. py:class:: SR3(N2, G, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Simple Ratio (860, 550 and 708 nm)


   .. py:attribute:: short_name
      :value: 'SR3'



   .. py:attribute:: long_name
      :value: 'Simple Ratio (860, 550 and 708 nm)'



   .. py:attribute:: bands
      :value: ['N2', 'G', 'RE1']



   .. py:attribute:: formula
      :value: 'N2/(G * RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(98)00046-7'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N2


   .. py:attribute:: G


   .. py:attribute:: RE1


.. py:class:: SR555(RE2, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Simple Ratio (555 and 750 nm)


   .. py:attribute:: short_name
      :value: 'SR555'



   .. py:attribute:: long_name
      :value: 'Simple Ratio (555 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'G']



   .. py:attribute:: formula
      :value: 'RE2 / G'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(11)81633-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: G


.. py:class:: SR705(RE2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Simple Ratio (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'SR705'



   .. py:attribute:: long_name
      :value: 'Simple Ratio (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1']



   .. py:attribute:: formula
      :value: 'RE2 / RE1'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0176-1617(11)81633-0'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


.. py:class:: SWI(G, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Snow Water Index


   .. py:attribute:: short_name
      :value: 'SWI'



   .. py:attribute:: long_name
      :value: 'Snow Water Index'



   .. py:attribute:: bands
      :value: ['G', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(G * (N - S1)) / ((G + N) * (N + S1))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs11232774'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: SWM(B, G, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Sentinel Water Mask


   .. py:attribute:: short_name
      :value: 'SWM'



   .. py:attribute:: long_name
      :value: 'Sentinel Water Mask'



   .. py:attribute:: bands
      :value: ['B', 'G', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(B + G)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://eoscience.esa.int/landtraining2017/files/posters/MILCZAREK.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: G


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: SeLI(N2, RE1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Sentinel-2 LAI Green Index


   .. py:attribute:: short_name
      :value: 'SeLI'



   .. py:attribute:: long_name
      :value: 'Sentinel-2 LAI Green Index'



   .. py:attribute:: bands
      :value: ['N2', 'RE1']



   .. py:attribute:: formula
      :value: '(N2 - RE1) / (N2 + RE1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/s19040904'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N2


   .. py:attribute:: RE1


.. py:class:: TCARI(RE1, R, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Chlorophyll Absorption in Reflectance Index


   .. py:attribute:: short_name
      :value: 'TCARI'



   .. py:attribute:: long_name
      :value: 'Transformed Chlorophyll Absorption in Reflectance Index'



   .. py:attribute:: bands
      :value: ['RE1', 'R', 'G']



   .. py:attribute:: formula
      :value: '3 * ((RE1 - R) - 0.2 * (RE1 - G) * (RE1 / R))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00018-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


   .. py:attribute:: G


.. py:class:: TCARIOSAVI(RE1, R, G, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   TCARI/OSAVI Ratio


   .. py:attribute:: short_name
      :value: 'TCARIOSAVI'



   .. py:attribute:: long_name
      :value: 'TCARI/OSAVI Ratio'



   .. py:attribute:: bands
      :value: ['RE1', 'R', 'G', 'N']



   .. py:attribute:: formula
      :value: '(3 * ((RE1 - R) - 0.2 * (RE1 - G) * (RE1 / R))) / (1.16 * (N - R) / (N + R + 0.16))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00018-4'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: N


.. py:class:: TCARIOSAVI705(RE2, RE1, G)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   TCARI/OSAVI Ratio (705 and 750 nm)


   .. py:attribute:: short_name
      :value: 'TCARIOSAVI705'



   .. py:attribute:: long_name
      :value: 'TCARI/OSAVI Ratio (705 and 750 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1', 'G']



   .. py:attribute:: formula
      :value: '(3 * ((RE2 - RE1) - 0.2 * (RE2 - G) * (RE2 / RE1))) / (1.16 * (RE2 - RE1) / (RE2 + RE1 + 0.16))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.agrformet.2008.03.005'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


   .. py:attribute:: G


.. py:class:: TCI(RE1, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Triangular Chlorophyll Index


   .. py:attribute:: short_name
      :value: 'TCI'



   .. py:attribute:: long_name
      :value: 'Triangular Chlorophyll Index'



   .. py:attribute:: bands
      :value: ['RE1', 'G', 'R']



   .. py:attribute:: formula
      :value: '1.2 * (RE1 - G) - 1.5 * (R - G) * (RE1 / R) ** 0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1109/TGRS.2007.904836'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: TDVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'TDVI'



   .. py:attribute:: long_name
      :value: 'Transformed Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '1.5 * ((N - R)/((N ** 2.0 + R + 0.5) ** 0.5))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.2002.1026867'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: TGI(R, G, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Triangular Greenness Index


   .. py:attribute:: short_name
      :value: 'TGI'



   .. py:attribute:: long_name
      :value: 'Triangular Greenness Index'



   .. py:attribute:: bands
      :value: ['R', 'G', 'B']



   .. py:attribute:: formula
      :value: '- 0.5 * (190 * (R - G) - 120 * (R - B))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1016/j.jag.2012.07.020'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: G


   .. py:attribute:: B


.. py:class:: TRRVI(RE2, R, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Red Range Vegetation Index


   .. py:attribute:: short_name
      :value: 'TRRVI'



   .. py:attribute:: long_name
      :value: 'Transformed Red Range Vegetation Index'



   .. py:attribute:: bands
      :value: ['RE2', 'R', 'N']



   .. py:attribute:: formula
      :value: '((RE2 - R) / (RE2 + R)) / (((N - R) / (N + R)) + 1.0)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs12152359'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: R


   .. py:attribute:: N


.. py:class:: TSAVI(sla, N, R, slb)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Soil-Adjusted Vegetation Index


   .. py:attribute:: short_name
      :value: 'TSAVI'



   .. py:attribute:: long_name
      :value: 'Transformed Soil-Adjusted Vegetation Index'



   .. py:attribute:: bands
      :value: ['sla', 'N', 'R', 'slb']



   .. py:attribute:: formula
      :value: 'sla * (N - sla * R - slb) / (sla * N + R - sla * slb)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS.1989.576128'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: sla


   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: slb


.. py:class:: TTVI(RE3, RE2, N2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Triangular Vegetation Index


   .. py:attribute:: short_name
      :value: 'TTVI'



   .. py:attribute:: long_name
      :value: 'Transformed Triangular Vegetation Index'



   .. py:attribute:: bands
      :value: ['RE3', 'RE2', 'N2']



   .. py:attribute:: formula
      :value: '0.5 * ((865.0 - 740.0) * (RE3 - RE2) - (N2 - RE2) * (783.0 - 740))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs12010016'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE3


   .. py:attribute:: RE2


   .. py:attribute:: N2


.. py:class:: TVI(N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Transformed Vegetation Index


   .. py:attribute:: short_name
      :value: 'TVI'



   .. py:attribute:: long_name
      :value: 'Transformed Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'R']



   .. py:attribute:: formula
      :value: '(((N - R)/(N + R)) + 0.5) ** 0.5'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://ntrs.nasa.gov/citations/19740022614'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: TWI(RE1, RE2, G, S2, B, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Triangle Water Index


   .. py:attribute:: short_name
      :value: 'TWI'



   .. py:attribute:: long_name
      :value: 'Triangle Water Index'



   .. py:attribute:: bands
      :value: ['RE1', 'RE2', 'G', 'S2', 'B', 'N']



   .. py:attribute:: formula
      :value: '(2.84 * (RE1 - RE2) / (G + S2)) + ((1.25 * (G - B) - (N - B)) / (N + 1.25 * G - 0.25 * B))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs14215289'



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: RE1


   .. py:attribute:: RE2


   .. py:attribute:: G


   .. py:attribute:: S2


   .. py:attribute:: B


   .. py:attribute:: N


.. py:class:: TriVI(N, G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Triangular Vegetation Index


   .. py:attribute:: short_name
      :value: 'TriVI'



   .. py:attribute:: long_name
      :value: 'Triangular Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'G', 'R']



   .. py:attribute:: formula
      :value: '0.5 * (120 * (N - G) - 200 * (R - G))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1016/S0034-4257(00)00197-8'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: UI(S2, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Urban Index


   .. py:attribute:: short_name
      :value: 'UI'



   .. py:attribute:: long_name
      :value: 'Urban Index'



   .. py:attribute:: bands
      :value: ['S2', 'N']



   .. py:attribute:: formula
      :value: '(S2 - N)/(S2 + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://www.isprs.org/proceedings/XXXI/congress/part7/321_XXXI-part7.pdf'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: S2


   .. py:attribute:: N


.. py:class:: VARI(G, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Visible Atmospherically Resistant Index


   .. py:attribute:: short_name
      :value: 'VARI'



   .. py:attribute:: long_name
      :value: 'Visible Atmospherically Resistant Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'B']



   .. py:attribute:: formula
      :value: '(G - R) / (G + R - B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00289-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: VARI700(RE1, R, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Visible Atmospherically Resistant Index (700 nm)


   .. py:attribute:: short_name
      :value: 'VARI700'



   .. py:attribute:: long_name
      :value: 'Visible Atmospherically Resistant Index (700 nm)'



   .. py:attribute:: bands
      :value: ['RE1', 'R', 'B']



   .. py:attribute:: formula
      :value: '(RE1 - 1.7 * R + 0.7 * B) / (RE1 + 1.3 * R - 1.3 * B)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00289-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


   .. py:attribute:: B


.. py:class:: VDDPI(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Vertical Dual De-Polarization Index


   .. py:attribute:: short_name
      :value: 'VDDPI'



   .. py:attribute:: long_name
      :value: 'Vertical Dual De-Polarization Index'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: '(VV + VH)/VV'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2018.09.003'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: VHVVD(VH, VV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VH-VV Difference


   .. py:attribute:: short_name
      :value: 'VHVVD'



   .. py:attribute:: long_name
      :value: 'VH-VV Difference'



   .. py:attribute:: bands
      :value: ['VH', 'VV']



   .. py:attribute:: formula
      :value: 'VH - VV'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/app9040655'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VH


   .. py:attribute:: VV


.. py:class:: VHVVP(VH, VV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VH-VV Product


   .. py:attribute:: short_name
      :value: 'VHVVP'



   .. py:attribute:: long_name
      :value: 'VH-VV Product'



   .. py:attribute:: bands
      :value: ['VH', 'VV']



   .. py:attribute:: formula
      :value: 'VH * VV'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS47720.2021.9554099'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VH


   .. py:attribute:: VV


.. py:class:: VHVVR(VH, VV)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VH-VV Ratio


   .. py:attribute:: short_name
      :value: 'VHVVR'



   .. py:attribute:: long_name
      :value: 'VH-VV Ratio'



   .. py:attribute:: bands
      :value: ['VH', 'VV']



   .. py:attribute:: formula
      :value: 'VH/VV'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS47720.2021.9554099'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VH


   .. py:attribute:: VV


.. py:class:: VI6T(N, T)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VI6T Index


   .. py:attribute:: short_name
      :value: 'VI6T'



   .. py:attribute:: long_name
      :value: 'VI6T Index'



   .. py:attribute:: bands
      :value: ['N', 'T']



   .. py:attribute:: formula
      :value: '(N - T/10000.0)/(N + T/10000.0)'



   .. py:attribute:: platforms
      :value: ['Landsat-TM', 'Landsat-ETM+']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1080/01431160500239008'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: T


.. py:class:: VI700(RE1, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Vegetation Index (700 nm)


   .. py:attribute:: short_name
      :value: 'VI700'



   .. py:attribute:: long_name
      :value: 'Vegetation Index (700 nm)'



   .. py:attribute:: bands
      :value: ['RE1', 'R']



   .. py:attribute:: formula
      :value: '(RE1 - R) / (RE1 + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00289-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE1


   .. py:attribute:: R


.. py:class:: VIBI(N, R, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Vegetation Index Built-up Index


   .. py:attribute:: short_name
      :value: 'VIBI'



   .. py:attribute:: long_name
      :value: 'Vegetation Index Built-up Index'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S1']



   .. py:attribute:: formula
      :value: '((N-R)/(N+R))/(((N-R)/(N+R)) + ((S1-N)/(S1+N)))'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'http://dx.doi.org/10.1080/01431161.2012.687842'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S1


.. py:class:: VIG(G, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Vegetation Index Green


   .. py:attribute:: short_name
      :value: 'VIG'



   .. py:attribute:: long_name
      :value: 'Vegetation Index Green'



   .. py:attribute:: bands
      :value: ['G', 'R']



   .. py:attribute:: formula
      :value: '(G - R) / (G + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(01)00289-9'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


.. py:class:: VVVHD(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VV-VH Difference


   .. py:attribute:: short_name
      :value: 'VVVHD'



   .. py:attribute:: long_name
      :value: 'VV-VH Difference'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: 'VV - VH'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS47720.2021.9554099'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: VVVHR(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VV-VH Ratio


   .. py:attribute:: short_name
      :value: 'VVVHR'



   .. py:attribute:: long_name
      :value: 'VV-VH Ratio'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: 'VV/VH'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/app9040655'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: VVVHS(VV, VH)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   VV-VH Sum


   .. py:attribute:: short_name
      :value: 'VVVHS'



   .. py:attribute:: long_name
      :value: 'VV-VH Sum'



   .. py:attribute:: bands
      :value: ['VV', 'VH']



   .. py:attribute:: formula
      :value: 'VV + VH'



   .. py:attribute:: platforms
      :value: ['Sentinel-1 (Dual Polarisation VV-VH)']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/IGARSS47720.2021.9554099'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: VV


   .. py:attribute:: VH


.. py:class:: VgNIRBI(G, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Visible Green-Based Built-Up Index


   .. py:attribute:: short_name
      :value: 'VgNIRBI'



   .. py:attribute:: long_name
      :value: 'Visible Green-Based Built-Up Index'



   .. py:attribute:: bands
      :value: ['G', 'N']



   .. py:attribute:: formula
      :value: '(G - N)/(G + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.ecolind.2015.03.037'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: N


.. py:class:: VrNIRBI(R, N)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Visible Red-Based Built-Up Index


   .. py:attribute:: short_name
      :value: 'VrNIRBI'



   .. py:attribute:: long_name
      :value: 'Visible Red-Based Built-Up Index'



   .. py:attribute:: bands
      :value: ['R', 'N']



   .. py:attribute:: formula
      :value: '(R - N)/(R + N)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.ecolind.2015.03.037'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: R


   .. py:attribute:: N


.. py:class:: WDRVI(alpha, N, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Wide Dynamic Range Vegetation Index


   .. py:attribute:: short_name
      :value: 'WDRVI'



   .. py:attribute:: long_name
      :value: 'Wide Dynamic Range Vegetation Index'



   .. py:attribute:: bands
      :value: ['alpha', 'N', 'R']



   .. py:attribute:: formula
      :value: '(alpha * N - R) / (alpha * N + R)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1078/0176-1617-01176'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: alpha


   .. py:attribute:: N


   .. py:attribute:: R


.. py:class:: WDVI(N, sla, R)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Weighted Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'WDVI'



   .. py:attribute:: long_name
      :value: 'Weighted Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['N', 'sla', 'R']



   .. py:attribute:: formula
      :value: 'N - sla * R'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/0034-4257(89)90076-X'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: sla


   .. py:attribute:: R


.. py:class:: WI1(G, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Water Index 1


   .. py:attribute:: short_name
      :value: 'WI1'



   .. py:attribute:: long_name
      :value: 'Water Index 1'



   .. py:attribute:: bands
      :value: ['G', 'S2']



   .. py:attribute:: formula
      :value: '(G - S2) / (G + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs11182186'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: S2


.. py:class:: WI2(B, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Water Index 2


   .. py:attribute:: short_name
      :value: 'WI2'



   .. py:attribute:: long_name
      :value: 'Water Index 2'



   .. py:attribute:: bands
      :value: ['B', 'S2']



   .. py:attribute:: formula
      :value: '(B - S2) / (B + S2)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.3390/rs11182186'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: B


   .. py:attribute:: S2


.. py:class:: WI2015(G, R, N, S1, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Water Index 2015


   .. py:attribute:: short_name
      :value: 'WI2015'



   .. py:attribute:: long_name
      :value: 'Water Index 2015'



   .. py:attribute:: bands
      :value: ['G', 'R', 'N', 'S1', 'S2']



   .. py:attribute:: formula
      :value: '1.7204 + 171 * G + 3 * R - 70 * N - 45 * S1 - 71 * S2'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/j.rse.2015.12.055'



   .. py:attribute:: contributor
      :value: 'https://github.com/remi-braun'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: S1


   .. py:attribute:: S2


.. py:class:: WRI(G, R, N, S1)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Water Ratio Index


   .. py:attribute:: short_name
      :value: 'WRI'



   .. py:attribute:: long_name
      :value: 'Water Ratio Index'



   .. py:attribute:: bands
      :value: ['G', 'R', 'N', 'S1']



   .. py:attribute:: formula
      :value: '(G + R)/(N + S1)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1109/GEOINFORMATICS.2010.5567762'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: G


   .. py:attribute:: R


   .. py:attribute:: N


   .. py:attribute:: S1


.. py:class:: bNIRv(N, B)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Blue Near-Infrared Reflectance of Vegetation


   .. py:attribute:: short_name
      :value: 'bNIRv'



   .. py:attribute:: long_name
      :value: 'Blue Near-Infrared Reflectance of Vegetation'



   .. py:attribute:: bands
      :value: ['N', 'B']



   .. py:attribute:: formula
      :value: '((N - B)/(N + B)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: B


.. py:class:: kEVI(g, kNN, kNR, C1, C2, kNB, kNL)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kernel Enhanced Vegetation Index


   .. py:attribute:: short_name
      :value: 'kEVI'



   .. py:attribute:: long_name
      :value: 'Kernel Enhanced Vegetation Index'



   .. py:attribute:: bands
      :value: ['g', 'kNN', 'kNR', 'C1', 'C2', 'kNB', 'kNL']



   .. py:attribute:: formula
      :value: 'g * (kNN - kNR) / (kNN + C1 * kNR - C2 * kNB + kNL)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.abc7447'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: g


   .. py:attribute:: kNN


   .. py:attribute:: kNR


   .. py:attribute:: C1


   .. py:attribute:: C2


   .. py:attribute:: kNB


   .. py:attribute:: kNL


.. py:class:: kIPVI(kNN, kNR)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kernel Infrared Percentage Vegetation Index


   .. py:attribute:: short_name
      :value: 'kIPVI'



   .. py:attribute:: long_name
      :value: 'Kernel Infrared Percentage Vegetation Index'



   .. py:attribute:: bands
      :value: ['kNN', 'kNR']



   .. py:attribute:: formula
      :value: 'kNN/(kNN + kNR)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.abc7447'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: kNN


   .. py:attribute:: kNR


.. py:class:: kNDVI(kNN, kNR)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kernel Normalized Difference Vegetation Index


   .. py:attribute:: short_name
      :value: 'kNDVI'



   .. py:attribute:: long_name
      :value: 'Kernel Normalized Difference Vegetation Index'



   .. py:attribute:: bands
      :value: ['kNN', 'kNR']



   .. py:attribute:: formula
      :value: '(kNN - kNR)/(kNN + kNR)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.abc7447'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: kNN


   .. py:attribute:: kNR


.. py:class:: kRVI(kNN, kNR)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kernel Ratio Vegetation Index


   .. py:attribute:: short_name
      :value: 'kRVI'



   .. py:attribute:: long_name
      :value: 'Kernel Ratio Vegetation Index'



   .. py:attribute:: bands
      :value: ['kNN', 'kNR']



   .. py:attribute:: formula
      :value: 'kNN / kNR'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.abc7447'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: kNN


   .. py:attribute:: kNR


.. py:class:: kVARI(kGG, kGR, kGB)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Kernel Visible Atmospherically Resistant Index


   .. py:attribute:: short_name
      :value: 'kVARI'



   .. py:attribute:: long_name
      :value: 'Kernel Visible Atmospherically Resistant Index'



   .. py:attribute:: bands
      :value: ['kGG', 'kGR', 'kGB']



   .. py:attribute:: formula
      :value: '(kGG - kGR) / (kGG + kGR - kGB)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS', 'Planet-Fusion']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1126/sciadv.abc7447'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: kGG


   .. py:attribute:: kGR


   .. py:attribute:: kGB


.. py:class:: mND705(RE2, RE1, A)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Normalized Difference (705, 750 and 445 nm)


   .. py:attribute:: short_name
      :value: 'mND705'



   .. py:attribute:: long_name
      :value: 'Modified Normalized Difference (705, 750 and 445 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'RE1', 'A']



   .. py:attribute:: formula
      :value: '(RE2 - RE1)/(RE2 + RE1 - A)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00010-X'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: RE1


   .. py:attribute:: A


.. py:class:: mSR705(RE2, A)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   Modified Simple Ratio (705 and 445 nm)


   .. py:attribute:: short_name
      :value: 'mSR705'



   .. py:attribute:: long_name
      :value: 'Modified Simple Ratio (705 and 445 nm)'



   .. py:attribute:: bands
      :value: ['RE2', 'A']



   .. py:attribute:: formula
      :value: '(RE2 - A)/(RE2 + A)'



   .. py:attribute:: platforms
      :value: ['Sentinel-2']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1016/S0034-4257(02)00010-X'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: RE2


   .. py:attribute:: A


.. py:class:: sNIRvLSWI(N, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SWIR-enhanced Near-Infrared Reflectance of Vegetation for LSWI


   .. py:attribute:: short_name
      :value: 'sNIRvLSWI'



   .. py:attribute:: long_name
      :value: 'SWIR-enhanced Near-Infrared Reflectance of Vegetation for LSWI'



   .. py:attribute:: bands
      :value: ['N', 'S2']



   .. py:attribute:: formula
      :value: '((N - S2)/(N + S2)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: S2


.. py:class:: sNIRvNDPI(N, alpha, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SWIR-enhanced Near-Infrared Reflectance of Vegetation for NDPI


   .. py:attribute:: short_name
      :value: 'sNIRvNDPI'



   .. py:attribute:: long_name
      :value: 'SWIR-enhanced Near-Infrared Reflectance of Vegetation for NDPI'



   .. py:attribute:: bands
      :value: ['N', 'alpha', 'R', 'S2']



   .. py:attribute:: formula
      :value: '(N - (alpha * R + (1.0 - alpha) * S2))/(N + (alpha * R + (1.0 - alpha) * S2)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: alpha


   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: sNIRvNDVILSWIP(N, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SWIR-enhanced Near-Infrared Reflectance of Vegetation for the NDVI-LSWI Product


   .. py:attribute:: short_name
      :value: 'sNIRvNDVILSWIP'



   .. py:attribute:: long_name
      :value: 'SWIR-enhanced Near-Infrared Reflectance of Vegetation for the NDVI-LSWI Product'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S2']



   .. py:attribute:: formula
      :value: '((N - R)/(N + R)) * ((N - S2)/(N + S2)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: sNIRvNDVILSWIS(N, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SWIR-enhanced Near-Infrared Reflectance of Vegetation for the NDVI-LSWI Sum


   .. py:attribute:: short_name
      :value: 'sNIRvNDVILSWIS'



   .. py:attribute:: long_name
      :value: 'SWIR-enhanced Near-Infrared Reflectance of Vegetation for the NDVI-LSWI Sum'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S2']



   .. py:attribute:: formula
      :value: '(((N - R)/(N + R)) + ((N - S2)/(N + S2))) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/davemlz'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S2


.. py:class:: sNIRvSWIR(N, R, S2)

   Bases: :py:obj:`wcps.model.WCPSExpr`


   SWIR-enhanced Near-Infrared Reflectance of Vegetation


   .. py:attribute:: short_name
      :value: 'sNIRvSWIR'



   .. py:attribute:: long_name
      :value: 'SWIR-enhanced Near-Infrared Reflectance of Vegetation'



   .. py:attribute:: bands
      :value: ['N', 'R', 'S2']



   .. py:attribute:: formula
      :value: '((N - R - S2 ** 2.0)/(N + R + S2 ** 2.0)) * N'



   .. py:attribute:: platforms
      :value: ['Sentinel-2', 'Landsat-OLI', 'Landsat-TM', 'Landsat-ETM+', 'MODIS']



   .. py:attribute:: reference
      :value: 'https://doi.org/10.1029/2024JG008240'



   .. py:attribute:: contributor
      :value: 'https://github.com/MartinuzziFrancesco'



   .. py:attribute:: N


   .. py:attribute:: R


   .. py:attribute:: S2


